# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 TEXTA
# This file is distributed under the same license as the TEXTA Toolkit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TEXTA Toolkit 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-11 11:47+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/installation.rst:1
msgid ""
"`In English <https://docs.texta.ee/installation.html>`_ `eesti keeles "
"<https://docs.texta.ee/et/installation.html>`_"
msgstr ""

#: ../../source/installation.rst:7
msgid "Installation"
msgstr "Installimine"

#: ../../source/installation.rst:10
msgid "Installation Using Docker (recommended)"
msgstr "Installimine Dockeriga (soovitatud)"

#: ../../source/installation.rst:14
msgid ""
"Currently all installation examples for system dependencies are only "
"shown for Debian-based systems."
msgstr ""
"Hetkel on kõik süsteeminõuete installimise näited siin vaid Debian-i "
"põhistel süsteemidel."

#: ../../source/installation.rst:17
msgid "Install Docker"
msgstr "Dockeri installimine"

#: ../../source/installation.rst:19
msgid ""
"The easiest way to run TEXTA Toolkit is to use our prebuilt Docker images"
" from our registries. For doing so, one needs to install *Docker* and "
"*docker-compose*:"
msgstr ""
"Lihtsaim viis TEXTA Toolkiti jooksutamiseks on käivitada ette valmistatud "
"Dockeri pilte TTK registritest. Selleks peab installima *Docker*-i and "
"*docker-compose*-i:"

#: ../../source/installation.rst:26
msgid ""
"To run Elasticsearch in Docker, we need to increase maximum map count "
"parameter for virtual memory:"
msgstr ""
"Elasticsearchi Docker-is kasutamiseks on vaja tõsta maksimaalset *map "
"count* parameetrit virtuaalmälule:"

#: ../../source/installation.rst:33
msgid "Configure docker-compose"
msgstr "Seadista *docker-compose*"

#: ../../source/installation.rst:35
msgid ""
"We are using *docker-compose* to build an ecosystem of services to "
"support our needs. This is all defined in a file called **docker-"
"compose.yaml**. To successfully run TEXTA Toolkit we need to define "
"following services:"
msgstr ""
"*docker-compose*-i kasutatakse selleks, et oleks olemas keskkond, mille "
"teenused rahuldaksid meie vajadusi. Need teenused on defineeritud failis "
"**docker-compose.yaml**. TEXTA Toolkiti edukaks jooksutamiseks on vaja "
"järgnevaid teenuseid:"

#: ../../source/installation.rst:38
msgid ""
"Elasticsearch for storing the documents (one can also run it without "
"Docker)"
msgstr "Elasticsearch dokumentide hoiustamiseks (saab kasutada ka Dockerita)"

#: ../../source/installation.rst:40
msgid ""
"MySQL or Postgres for storing user and project data (can also be run "
"without Docker)"
msgstr ""
"MySQL ja Postgres kasutaja ja projektiandmete hoiustamiseks (saab "
"kasutada ka Dockerita)"

#: ../../source/installation.rst:42
msgid ""
"TEXTA Toolkit RESTful API for backend: docker.texta.ee/texta/texta-"
"rest:latest"
msgstr ""
"TEXTA Toolkit RESTful API (*backend*): docker.texta.ee/texta/texta-"
"rest:latest"

#: ../../source/installation.rst:44
msgid ""
"TEXTA Toolkit Angular frontend: docker.texta.ee/texta/texta-rest-"
"front:latest"
msgstr ""
"TEXTA Toolkit Angular (*frontend*): docker.texta.ee/texta/texta-rest-"
"front:latest"

#: ../../source/installation.rst:46
msgid ""
"For executing aforementioned services we have preconfigured an example "
"**docker-compose.yaml** file:"
msgstr ""
"Eelnimetatud teenuste käivitamiseks oleme loonud **docker-compose.yaml** "
"näidisfaili: "

#: ../../source/installation.rst:50
msgid ""
"The compose file is used in combination with **env** file located in the "
"same directory as *docker-compose.yaml* containing environment variables "
"needed for operating TEXTA Toolkit:"
msgstr ""
"Seda faili kasutatakse üheskoos **env** failiga, mis on *docker-"
"compose.yaml*-iga samas kaustas ja mis sisaldab endas *enviroment* "
"muutujaid, mida on TEXTA Toolkiti jooksutamiseks tarvis:"

#: ../../source/installation.rst:55
msgid "Run TEXTA Toolkit"
msgstr "TEXTA Toolkiti käivitamine"

#: ../../source/installation.rst:58
msgid ""
"Before running TEXTA Toolkit, we should have 2 files in our current "
"working directory:"
msgstr "Enne TEXTA Toolkiti käivitamist peab töökaustas olema 2 faili:"

#: ../../source/installation.rst:60
msgid "docker-compose.yaml"
msgstr ""

#: ../../source/installation.rst:62
msgid "env"
msgstr ""

#: ../../source/installation.rst:64
msgid ""
"With the **docker-compose.yaml** and **env** files present and accounted "
"for, let's pull the images and start the services by executing the "
"following commands in the same directory with **docker-compose.yaml** and"
" **env**:"
msgstr ""
"Kui failid **docker-compose.yaml** ja **env** on valmis, võib "
"Dockeri pildid alla tõmmata ja teenused käivitada, kasutades järgnevaid "
"käske **docker-compose.yaml** ja **env** failidega samas kaustas:"

#: ../../source/installation.rst:72
msgid "For running in detached mode, use the *-d* flag:"
msgstr "*Detached mode*-i kasutamiseks kasuta *-d* lippu: "

#: ../../source/installation.rst:79
msgid "TEXTA Toolkit's dockerized version comes with a default superuser account:"
msgstr ""
"TEXTA Toolkit-i Dockeri versiooniga tuleb vaikimisi kaasa superkasutaja "
"konto:"

#: ../../source/installation.rst:81 ../../source/installation.rst:160
msgid "**user:** admin"
msgstr ""

#: ../../source/installation.rst:83 ../../source/installation.rst:162
msgid "**password:** 1234"
msgstr ""

#: ../../source/installation.rst:85
msgid "When running, TEXTA Toolkit's GUI should be available at:"
msgstr "Kui TEXTA Toolkit jookseb, on selle GUI saadaval aadressil:"

#: ../../source/installation.rst:87
msgid "http://localhost:4200"
msgstr ""

#: ../../source/installation.rst:89
msgid "and API at:"
msgstr "ja API aadressil:"

#: ../../source/installation.rst:91
msgid "http://localhost/api/v1/"
msgstr ""

#: ../../source/installation.rst:93
msgid "For stopping the services:"
msgstr "Teenuste peatamiseks kasuta käsku:"

#: ../../source/installation.rst:101
msgid "Installation for Development"
msgstr "Installimine arenduse jaoks"

#: ../../source/installation.rst:103
msgid ""
"If you want to develop TEXTA Toolkit, want more control over how you run "
"it, or seriously dislike Docker, it is also possible to install Toolkit "
"using Anaconda (or Miniconda as shown in following examples)."
msgstr ""
"Kui Sulle ei meeldi Docker või soovid TEXTA Toolkitti arendada ja saada "
"selle jooksutamise üle rohkem kontrolli, võid Toolkitti installida ka "
"Anacondaga (või Minicondaga nagu on näidetes näha)."

#: ../../source/installation.rst:106
msgid "Install Miniconda"
msgstr "Installi Miniconda"

#: ../../source/installation.rst:108
msgid ""
"First we need to download and install Miniconda to manage Python "
"environments. We choose Miniconda over Anaconda because it's smaller in "
"size, but Toolkit works well with both."
msgstr ""
"Esiteks tuleb alla laadida ja installida Miniconda Pythoni keskkondade "
"haldamiseks. Me eelistame Minicondat Anacondale, kuna see on mahult "
"väiksem, kuid Toolkit töötab hästi mõlemas."

#: ../../source/installation.rst:116
msgid "Also, let's permanently put Conda binaries to **PATH** variable:"
msgstr "Esiteks määrame Conda binaarfailid **PATH** muutujasse:"

#: ../../source/installation.rst:123
msgid "Clone the Repository"
msgstr "Repositooriumi kloonimine"

#: ../../source/installation.rst:125
msgid "Now, let's clone the repository and move to **texta-rest** direcory:"
msgstr "Kloonime repositooriumi ja navigeerime **texta-rest** kausta:"

#: ../../source/installation.rst:133
msgid "Build the Environment"
msgstr "Ehita Conda keskkond"

#: ../../source/installation.rst:135
msgid ""
"Now that we have **environment.yaml** file from the texta-rest "
"repository, let's use it to build the environment. After the environment "
"is built, let's activate it:"
msgstr ""
"Nüüd, kus meil on **environment.yaml** fail texta-rest repositooriumist, "
"kasutame seda keskkonna ehitamiseks. Seejärel aktiveerime selle:"

#: ../../source/installation.rst:144
msgid "Migrate & Run Toolkit"
msgstr "Migreeri ja käivita Toolkit"

#: ../../source/installation.rst:146
msgid ""
"After the environment has been created and activated, let's prepare the "
"database:"
msgstr "Pärast keskkonna loomist ja aktiveerimist, valmistame ette andmebaasi:"

#: ../../source/installation.rst:152
msgid ""
"Running the **migrate.py** script will prepare Django migrations and "
"execute them. It is necessary to run the script every time the source "
"code changes because Toolkit's data model might have changed as well. It "
"is also required to run the script before using Toolkit for the first "
"time to create both superuser account and database used to store the data"
" model."
msgstr ""
"**migrate.py** skripti jooksutamine valmistab ette Django migratsioonid "
"ja käivitab need. Seda skripti peab kasutama iga kord, kui lähtekood "
"muutub, kuna Toolkiti andmemudel võib samuti olla muutunud. Lisaks on "
"seda skripti vaja jooksutada enne Toolkiti esimest korda kasutamist, kuna"
" see tekitab superkasutaja konto ja andmebaasi, mida kasutatakse "
"andmemudeli hoiustamiseks."

#: ../../source/installation.rst:158
msgid ""
"Running **migrate.py** will also create a default superuser account with "
"following credentials:"
msgstr ""
"**migrate.py** jooksutamine tekitab vaikimisi superkasutaja konto "
"järgnevate andmetega:"

#: ../../source/installation.rst:164
msgid "Finally let's run the development server:"
msgstr "Lõpuks jooksutame arendusserverit:"

#: ../../source/installation.rst:170
msgid ""
"And in another terminal run the Celery worker responsible for "
"asynchronous tasks:"
msgstr ""
"Ja teises terminalis jooksutame Celery't, mis vastutab asünkrooniliste "
"ülesannete eest:"

