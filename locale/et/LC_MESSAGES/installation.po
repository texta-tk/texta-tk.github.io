# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 TEXTA
# This file is distributed under the same license as the TEXTA Toolkit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TEXTA Toolkit 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-14 17:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.1\n"

#: ../../source/installation.rst:1
msgid ""
"`EN <https://docs.texta.ee/installation.html>`_ `ET "
"<https://docs.texta.ee/et/installation.html>`_"
msgstr ""

#: ../../source/installation.rst:8
msgid "Installation"
msgstr "Installimine"

#: ../../source/installation.rst:11
msgid "Installation Using Docker (recommended)"
msgstr "Install Dockeriga"

#: ../../source/installation.rst:15
msgid ""
"Currently all installation examples for system dependencies are only "
"shown for Debian-based systems."
msgstr "Hetkel on kõik näited tehtud Debiani baasil."

#: ../../source/installation.rst:18
msgid "Install Docker"
msgstr "Installi Docker"

#: ../../source/installation.rst:20
msgid ""
"The easiest way to run TEXTA Toolkit is to use prebuilt Docker images "
"from TEXTA registries. For that, one needs to install *Docker* and "
"*docker-compose*:"
msgstr ""
"Lihtsaim viis TEXTA Toolkiti installimiseks on kasutada Dockeri pilte "
"TEXTA registrist. Selleks tuleb installida *Docker* ja *docker-compose*."

#: ../../source/installation.rst:27
msgid ""
"To run :ref:`Elasticsearch <elasticsearch>` in Docker, one needs to "
"increase maximum map count parameter for virtual memory:"
msgstr ""
"Selleks, et edukalt :ref:`Elasticsearchi <elasticsearch>` Dockeris "
"pruukida, tuleb tõsta parameetri *maximum map count* väärtust:"

#: ../../source/installation.rst:34
msgid "Configure docker-compose"
msgstr "Konfigureeri docker-compose"

#: ../../source/installation.rst:36
msgid ""
"The ecosystem is built using *docker-compose*. This is all defined in a "
"file called **docker-compose.yaml**. To successfully run TEXTA Toolkit "
"one needs to define following services:"
msgstr ""

#: ../../source/installation.rst:39
msgid ""
":ref:`Elasticsearch <elasticsearch>` for storing the documents (one can "
"also run it without Docker)"
msgstr ""

#: ../../source/installation.rst:41
msgid ""
"Redis for managing message queues in TK (one can also run it without "
"Docker)"
msgstr ""

#: ../../source/installation.rst:43
msgid ""
"MySQL or Postgres for storing user and :ref:`project <project_concept>` "
"data (can also be run without Docker)"
msgstr ""

#: ../../source/installation.rst:45
msgid "TEXTA Toolkit RESTful API & GUI: docker.texta.ee/texta/texta-rest:latest"
msgstr ""

#: ../../source/installation.rst:47
msgid ""
"For executing aforementioned services one needs to have preconfigured "
"**docker-compose.yaml** file:"
msgstr ""

#: ../../source/installation.rst:51
msgid ""
"The compose file is used in combination with **env** file located in the "
"same directory as *docker-compose.yaml* containing environment variables "
"needed for operating TEXTA Toolkit:"
msgstr ""

#: ../../source/installation.rst:56
msgid "Run TEXTA Toolkit"
msgstr ""

#: ../../source/installation.rst:59
msgid ""
"Before running TEXTA Toolkit, one should have 2 files in current working "
"directory:"
msgstr ""

#: ../../source/installation.rst:61
msgid "docker-compose.yaml"
msgstr ""

#: ../../source/installation.rst:63
msgid "env"
msgstr ""

#: ../../source/installation.rst:65
msgid ""
"With the **docker-compose.yaml** and **env** files present and accounted "
"for, pull the images and start the services by executing the following "
"commands in the same directory with **docker-compose.yaml** and **env**:"
msgstr ""

#: ../../source/installation.rst:72
msgid "For running in detached mode, use the *-d* flag:"
msgstr ""

#: ../../source/installation.rst:79
msgid "TEXTA Toolkit's dockerized version comes with a default superuser account:"
msgstr ""

#: ../../source/installation.rst:81 ../../source/installation.rst:163
msgid "**user:** admin"
msgstr ""

#: ../../source/installation.rst:83
msgid "**password:** 1234"
msgstr ""

#: ../../source/installation.rst:85
msgid "When running, TEXTA Toolkit's GUI should be available at:"
msgstr ""

#: ../../source/installation.rst:87
msgid "http://localhost"
msgstr ""

#: ../../source/installation.rst:89
msgid "and API at:"
msgstr ""

#: ../../source/installation.rst:91
msgid "http://localhost/api/v1/"
msgstr ""

#: ../../source/installation.rst:93
msgid "For stopping the services:"
msgstr ""

#: ../../source/installation.rst:101
msgid "Installation for Development"
msgstr ""

#: ../../source/installation.rst:103
msgid ""
"If you want to develop TEXTA Toolkit, want more control over how you run "
"it, or seriously dislike Docker, it is also possible to install Toolkit "
"using Anaconda (or Miniconda as shown in following examples)."
msgstr ""

#: ../../source/installation.rst:106
msgid "Install Miniconda"
msgstr ""

#: ../../source/installation.rst:108
msgid ""
"First one needs to download and install Miniconda to manage Python "
"environments. Miniconda is chosen over Anaconda because it's smaller in "
"size, but Toolkit works well with both."
msgstr ""

#: ../../source/installation.rst:116
msgid "Also, let's permanently put Conda binaries to **PATH** variable:"
msgstr ""

#: ../../source/installation.rst:123
msgid "Clone the Repository"
msgstr ""

#: ../../source/installation.rst:125
msgid "Now, let's clone the repository and move to **texta-rest** direcory:"
msgstr ""

#: ../../source/installation.rst:133
msgid "Build the Environment"
msgstr ""

#: ../../source/installation.rst:135
msgid ""
"Now that **environment.yaml** file from the texta-rest repository is "
"present, let's use it to build the environment. After the environment is "
"built, let's activate it:"
msgstr ""

#: ../../source/installation.rst:144
msgid "If you want Toolkit to use GPU, use environment-gpu.yaml instead."
msgstr ""

#: ../../source/installation.rst:147
msgid "Migrate & Run Toolkit"
msgstr ""

#: ../../source/installation.rst:149
msgid ""
"After the environment has been created and activated, let's prepare the "
"database:"
msgstr ""

#: ../../source/installation.rst:155
msgid ""
"Running the **migrate.py** script will prepare Django migrations and "
"execute them. It is necessary to run the script every time the source "
"code changes because Toolkit's data model might have changed as well. It "
"is also required to run the script before using Toolkit for the first "
"time to create both superuser account and database used to store the data"
" model."
msgstr ""

#: ../../source/installation.rst:161
msgid ""
"Running **migrate.py** will also create a default superuser account with "
"following credentials which will be printed into the console:"
msgstr "**migrate.py** käivitamine loob samuti admin õigustega konto, mille kasutajanime ja parooli näidetakse konsoolis."

#: ../../source/installation.rst:165
msgid ""
"**password:** {{RandomlyGeneratedHexString}} or the value of the "
"environment variable TEXTA_ADMIN_PASSWORD."
msgstr "**parool:** {{SuvaliseltLoodudSõne}} või keskkonnamuutuja TEXTA_ADMIN_PASSWORD sisu."

#: ../../source/installation.rst:167
msgid ""
"Users can overwrite the username by running **python migrate.py -u "
"{{username}}** instead. In cases where the passwords needs to be "
"overwritten, running **python migrate.py -o** will overwrite the password"
" with whatever value is in the environment variable TEXTA_ADMIN_PASSWORD."
msgstr ""
"Kasutajad saavad loodud admin konto kasutajanime ülekirjutada kasutades hoopis **python migrate.py -u {{kasutajanimi}}. "
"Juhtudel kui on vaja ülekirjutada parooli saab käivitada **python migrate.py -o**, mis asendab parooli keskkonnamuutuja TEXTA_ADMIN_PASSWORD sisuga."

#: ../../source/installation.rst:170
msgid "Finally let's run the development server:"
msgstr ""

#: ../../source/installation.rst:176
msgid ""
"And in another terminal (with same conda environment and in the same "
"folder) run the Celery worker responsible for asynchronous tasks:"
msgstr ""

#: ../../source/installation.rst:183
msgid "Browsable API"
msgstr ""

#: ../../source/installation.rst:185
msgid "http://localhost:8000/api/v1/"
msgstr ""

#: ../../source/installation.rst:187
msgid "TODO"
msgstr ""

#: ../../source/installation.rst:192
msgid "API Reference"
msgstr ""

#: ../../source/installation.rst:194
msgid "Reference for Toolkit API is available when running the Toolkit:"
msgstr ""

#: ../../source/installation.rst:196
msgid "http://localhost:8000/api/v1/swagger/"
msgstr ""

#: ../../source/installation.rst:198
msgid "http://localhost:8000/api/v1/redoc/"
msgstr ""

#~ msgid ""
#~ "Running **migrate.py** will also create "
#~ "a default superuser account with "
#~ "following credentials:"
#~ msgstr ""

