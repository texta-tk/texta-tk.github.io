# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 TEXTA
# This file is distributed under the same license as the TEXTA Toolkit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TEXTA Toolkit 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-11 11:47+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/concepts.rst:1
msgid ""
"`In English <https://docs.texta.ee/concepts.html>`_ `eesti keeles "
"<https://docs.texta.ee/et/concepts.html>`_"
msgstr ""

#: ../../source/concepts.rst:5
msgid "Main Concepts of Toolkit"
msgstr "Toolkiti põhimõisted"

#: ../../source/concepts.rst:7
msgid "Here are described the main concepts related to TEXTA Toolkit (TTK)."
msgstr "Siin kirjeldatakse põhimõisteid, mida TEXTA Toolkitis (TTK-s) kasutatakse."

#: ../../source/concepts.rst:10
msgid "Project"
msgstr "Projekt"

#: ../../source/concepts.rst:12
msgid ""
"Project is the main unit of access and management for datasets and "
"resources (embeddings, text classifiers, etc.). A project is defined by "
"its description, list of Elasticsearch indices related to the project "
"(this is where the data is!), and a list of users who can access the "
"project and it’s resources. All resources in TTK belong to some project "
"and by adding or removing users, one can manage their access to the "
"project."
msgstr ""
"Projekt on põhiühik andmete ja ressurside (sõnavektorite, klassifikaatorite jne) "
"haldamiseks ja neile ligi pääsemiseks. Projekti defineerivad "
"tema kirjeldus, Elasticsearchi indeksite nimekiri  "
"(indeksites on andmed!) ja projektile ning selle ressurssidele "
"ligipääsu omavate kasutajate nimekiri. Kõik ressursid TTK-s kuuluvad mingisse projekti "
"ning kasutajaid lisades või eemaldades saab valida, kellel on "
"projektile ja selle ressurssidele ligipääs."

#: ../../source/concepts.rst:15
msgid "Task"
msgstr "Ülesanne (Task)"

#: ../../source/concepts.rst:17
msgid ""
"TEXTA Toolkit allows to build several different statistical models to "
"process the text. The training process is initiated via TTK API or GUI, "
"which results in creating of the object in TTK data model and starting "
"the asynchronous training task. Tasks are data objects for keeping track "
"of training progress of trainable statistical models."
msgstr ""
"TEXTA Toolkitis saab luua mitut erinevat statistilist mudelit "
"teksti töötlemiseks. Treenimisprotsessi saab alustada TTK API-s või GUI-s, "
"mis loob TTK andmemudelis objekti ning alustab "
"asünkroonset treenimisülesannet. Ülesanded on andmeobjektid, mille abil "
"saab jälgida treenitavate statistiliste mudelite treeningprogressi."

#: ../../source/concepts.rst:22
msgid "Search"
msgstr "Otsing (Search)"

#: ../../source/concepts.rst:24
msgid ""
"One of the most central component in TTK is Search, which is used to "
"define subsets of data for training text classification models and "
"performing various aggregations. Search is managed via GUI and can "
"contain one or more constraints on feature values (e.g. strings and "
"dates). Documents matching the search criteria can be used in various "
"actions/functionalities in TTK, e.g. extraction of relevant keywords, "
"data summarisation and exploration, and training text classifiers."
msgstr ""
"Search on üks TTK põhikomponente. Seda kasutatakse andmestikus teksti "
"klassifitseerimise mudelite treenimiseks vajalike alamhulkade loomeks "
"ja erinevate agregatsioonide tegemiseks. Searchi saab hallata GUI-s ning  "
"see võib sisalda üht või rohkem piirangut mingite tunnuste väärtustele (nt sõned ja  "
"kuupäevad). Otsingukriteeriumitele vastavaid dokumente saab kasutada erinevates "
"TTK vahendites, nt asjakohaste võtmesõnade eraldamises, "
"andmete kokku võtmises ja uurimiseks ning teksti klassifitseerimise treenimises."

#: ../../source/concepts.rst:29
msgid "Fact"
msgstr "Fakt (Fact)"

#: ../../source/concepts.rst:31
msgid "In TTK text annotations are regarded as facts:"
msgstr "TTK-s on taolised tekstimärgendid faktid:"

#: ../../source/concepts.rst:42
msgid "Facts are objects with following properties:"
msgstr "Faktid on järgnevate tunnustega objektid:"

#: ../../source/concepts.rst:44
msgid "fact - name for the annotation (e.g. PER, LOC, or any arbitrary string)"
msgstr "fakt - märgendi nimi (nt PER, LOC või mõni muu suvaline sõne) "

#: ../../source/concepts.rst:46
msgid ""
"str_val - string value for the annotation (e.g. \"Donald Trump\" for "
"PER). Values don't need to match annotated text segmements."
msgstr ""
"str_val - märgendi väärtus sõnena (nt \"Donald Trump\" või "
"PER). Väärtused ei pea ühilduma märgendatud teksti segmentidega."

#: ../../source/concepts.rst:48
msgid ""
"doc_path - path to the field containing the annotated string (e.g. "
"\"text\", \"text.author\", \"comment.text.author\", etc.)"
msgstr ""
"doc_path - tee väljale, kus on sõned märgendatud (nt "
"\"text\", \"text.author\", \"comment.text.author\" jne.)"

#: ../../source/concepts.rst:50
msgid ""
"spans - JSON string containing the start and end positions in the "
"annotated string"
msgstr ""
"spans - JSON sõne, mis sisaldab märgendatud sõne alguse ja "
"lõpu kaugust algusest."

#: ../../source/concepts.rst:52
msgid ""
"Toolkit comes with several predefined fact names that are used by our "
"Multilingual Processor:"
msgstr ""
"Toolkitis on mitu eelnevalt defineeritud fakti, mida saab kasutada TTK-s "
"Mitmekeelse tekstitöötlejaga (Multilingual Processor):"

#: ../../source/concepts.rst:57
msgid "Label"
msgstr "Silt"

#: ../../source/concepts.rst:57
msgid "Meaning"
msgstr "Tähendus"

#: ../../source/concepts.rst:57
msgid "Comment"
msgstr "Kommentaar"

#: ../../source/concepts.rst:59
msgid "PER"
msgstr ""

#: ../../source/concepts.rst:59
msgid "Persona"
msgstr ""

#: ../../source/concepts.rst:59
msgid "Name of a person."
msgstr "Inimese nimi"

#: ../../source/concepts.rst:61
msgid "ORG"
msgstr ""

#: ../../source/concepts.rst:61
msgid "Organisation"
msgstr "Asutus"

#: ../../source/concepts.rst:61
msgid "Name of an organisation, gotten statistically."
msgstr "Asutuse nimi, saadud statistiliselt"

#: ../../source/concepts.rst:63
msgid "LOC"
msgstr ""

#: ../../source/concepts.rst:63
msgid "Location"
msgstr "Asukoht"

#: ../../source/concepts.rst:63
msgid "Name of a location, gotten statistically."
msgstr "Asukoha nimi, saadud statistiliselt"

#: ../../source/concepts.rst:65
msgid "COMPANY"
msgstr ""

#: ../../source/concepts.rst:65
msgid "Company"
msgstr "Firma"

#: ../../source/concepts.rst:65
msgid ""
"Names of company registered in Estonia, gotten from `Estonian Open Data "
"<https://opendata.riik.ee/datasets/ariregister/>`_."
msgstr ""
"Eestis registreeritud firmade nimed, saadud `Estonian Open Data-st "
"<https://opendata.riik.ee/datasets/ariregister/>`_."

#: ../../source/concepts.rst:67
msgid "ADDR"
msgstr ""

#: ../../source/concepts.rst:67
msgid "Address"
msgstr "Aadress"

#: ../../source/concepts.rst:67
msgid ""
"Estonian address, gotten from `Estonian Open Data "
"<https://opendata.riik.ee/datasets/aadressiandmed/>`_."
msgstr ""
"Eesti aadressid, saadud `Estonian Open Data-st "
"<https://opendata.riik.ee/datasets/aadressiandmed/>`_."

#: ../../source/concepts.rst:69
msgid "DRUG"
msgstr ""

#: ../../source/concepts.rst:69
msgid "Drug"
msgstr "Ravim"

#: ../../source/concepts.rst:69
msgid "Name of a medicine."
msgstr "Ravimi nimi"

#: ../../source/concepts.rst:71
msgid "SUBSTANCE"
msgstr ""

#: ../../source/concepts.rst:71
msgid "Substance"
msgstr "Koostisosa"

#: ../../source/concepts.rst:71
msgid "Ingredient of a drug."
msgstr "Ravimi koostisosa"

#: ../../source/concepts.rst:73
msgid "EML"
msgstr ""

#: ../../source/concepts.rst:73
msgid "E-mail"
msgstr ""

#: ../../source/concepts.rst:73
msgid "E-mail address."
msgstr "E-maili aadress."

#: ../../source/concepts.rst:75
msgid "PHO"
msgstr ""

#: ../../source/concepts.rst:75
msgid "Phone"
msgstr "Telefon"

#: ../../source/concepts.rst:75
msgid "Phone number."
msgstr "Telefoninumber"

#: ../../source/concepts.rst:77
msgid "TEXTA_TAG"
msgstr ""

#: ../../source/concepts.rst:77
msgid "Own tag"
msgstr "Oma märgend"

#: ../../source/concepts.rst:77
msgid "Tags we have trained in :ref:`the Taggers under Models <texttaggers>`"
msgstr "Märgendid, mis on treenitud :ref:`Tagger-itega Models-i all <texttaggers>`"

#: ../../source/concepts.rst:80
msgid "Table 1. *Predefined Fact Names used by Multilingual Processor*"
msgstr "Tabel 1. *Mitmekeelse tekstitöötleja (Multilingual Processor) kasutatavad eelnevalt defineeritud faktid*"

#: ../../source/concepts.rst:82
msgid ""
"It is important to notice that COMPANY and ADDR identify only companies "
"and addresses registered in Estonian Open Data. It won't tag any foreign "
"company nor address while ORG and LOC identifies all of them."
msgstr ""
"Pane tähele, et COMPANY ja ADDR oskavad ära tunda ainult neid firmasid"
"ja aadresse, mis on registreeritud Estonian Open Data-s. See ei märgenda välismaa"
"firmasid ja aadresse. ORG ja LOC märgendab ka välismaa omi."

#: ../../source/concepts.rst:88
msgid "Index"
msgstr "Indeks (Index)"

#: ../../source/concepts.rst:90
msgid ""
"Index is a collection of documents in Elasticsearch. In Search output the"
" table consists of all the suitable documents filtered out from that "
"index and one row indicates a document."
msgstr ""
"Indeks on dokumentide kogum Elasticsearch-is. Otsingus (Search-is) väljastatakse"
" tabel indeksist välja filtreeritud dokumentidega. Üks rida tabelis on "
"üks dokument."

#: ../../source/concepts.rst:95
msgid "Field"
msgstr "Väli (Field)"

#: ../../source/concepts.rst:97
msgid ""
"Each document is a collection of fields. Field is a separated piece of "
"information in that document. For example, we can have an article with "
"fields containing the text, the date of publishing, headline, etc."
msgstr ""
"Iga dokument on väljade kogum. Väli on eraldatud infoosa "
"dokumendis. Näiteks võivad meil olla artiklid "
"sisu, avaldamisaja, pealkirja jms väljadega."

#: ../../source/concepts.rst:103
msgid "Embedding"
msgstr "Sõnavektor (embedding)"

#: ../../source/concepts.rst:105
msgid ""
"Embedding is a statistical model describing the distributional properties"
" of words and phrases, which enables the computation of similarity "
"between words and phrases. In TTK, embeddings are used for finding "
"contextually similar keywords to extend search results and building "
"lexicons. Furthermore, vectors from word embeddings can also be used in "
"neural classification models in Texta Toolkit. TTK currently only "
"supports Word2Vec embeddings, but work is being done to incorporate state"
" of the art embedding models (e.g. BERT from Google Research). "
"Furthermore, TTK will also employ cross-lingual embeddings developed by "
"EMBEDDIA to support multilingual text classification."
msgstr ""
"Sõnavektorite mudelid on statistilised mudelid, mis kirjeldavad sõnade ja fraaside"
" jaotuslikke omadusi, mis võimaldavad arvutada erinevate sõnade ja fraaside "
"vahelisi sarnasusi. TTK-s kasutatakse sõnavektoreid "
"kontekstuaalselt sarnaste võtmesõnade otsimiseks, mis aitab laiendada otsingu tulemusi ning ehitada "
"leksikone. Enamgi veel, sõnavektoreid saab kasutada ka TEXTA Toolkiti "
"tehisnärvivõrgupõhistes klassifikaatorites. TTK toetab hetkel vaid "
"Word2Vec sõnavektoreid, aga töötatakse selle nimel, et lisada juurde "
" kõige uuemaid ja veel paremaid sõnavektorite mudeleid (nt BERT-i Google-st). "
"TTK hakkab kasutama ka mitmekeelseid sõnavektorite mudeleid, mida arendatakse praegu "
"EMBEDDIA projektis mitmekeelse teksti klassifitseerimiseks."

#: ../../source/concepts.rst:114
msgid "Tagger"
msgstr "Märgendaja (Tagger)"

#: ../../source/concepts.rst:116
msgid ""
"Taggers are monolingual binary text classifiers used to predict tags for "
"documents, e.g. whether a tweet is toxic or talking about Brexit. Taggers"
" are trained using a subset of documents defined by a TTK search or a raw"
" Elasticsearch query (big ugly JSON object). The subset of documents "
"defines the “positive” set of examples (the documents about the topic "
"being tagged), whilst “negative” examples will be selected automatically "
"(to be unlike the positive ones). TTK taggers are trained using scikit-"
"learn pipelines and includes models like logistic regression and SVM. TTK"
" automatically splits the training data into training and testing data "
"(by default 80-20) and applies grid search combined with k-fold cross "
"validation to identify best hyperparameters. SVM model is also used for "
"feature selection to remove unimportant features from the model making it"
" smaller. For features, both word-based and character-based n-grams are "
"used."
msgstr ""
"Taggers are monolingual binary text classifiers used to predict tags for "
"documents, e.g. whether a tweet is toxic or talking about Brexit. Taggers"
" are trained using a subset of documents defined by a TTK search or a raw"
" Elasticsearch query (big ugly JSON object). The subset of documents "
"defines the “positive” set of examples (the documents about the topic "
"being tagged), whilst “negative” examples will be selected automatically "
"(to be unlike the positive ones). TTK taggers are trained using scikit-"
"learn pipelines and includes models like logistic regression and SVM. TTK"
" automatically splits the training data into training and testing data "
"(by default 80-20) and applies grid search combined with k-fold cross "
"validation to identify best hyperparameters. SVM model is also used for "
"feature selection to remove unimportant features from the model making it"
" smaller. For features, both word-based and character-based n-grams are "
"used."

#: ../../source/concepts.rst:127
msgid "Tagger Group"
msgstr ""

#: ../../source/concepts.rst:129
msgid ""
"Tagger Group is an extension to TTK’s binary taggers to support "
"monolingual multi-label classification. As its name suggests, Tagger "
"Groups incorporate multiple (binary) taggers, which are executed in "
"parallel to produce a list of tags to the user. Tagger Group has been "
"successfully tested with over 6000 binary models and prediction times are"
" usually less than 1 second. To achieve this, TTK has employed a hybrid "
"approach for multi-label tagging, which uses unsupervised machine "
"learning (document vectors) to limit the number of binary models used for"
" prediction. In such scenario input document is compared to training data"
" to determine most probable models to produce valid tags."
msgstr ""

#: ../../source/concepts.rst:138
msgid "Torch Tagger"
msgstr ""

#: ../../source/concepts.rst:140
msgid ""
"While Taggers and Tagger Groups use classical machine learning to produce"
" binary classification models, Texta Toolkit also incorporates deep "
"neural models for binary and multi-class text classification. As the "
"models are all programmed using PyTorch, the TTK’s component is called "
"Torch Tagger. It allows for the user to use several state-of-art text "
"classification models, including fastText, TextRNN using bi-direction "
"LSTM networks, RCNN using recurrent convolutional neural nets. Since all "
"models have been developed using PyTorch, introducing new models is "
"fairly straightforward. TorchTagger models also include the possibility "
"to use pre-trained word vectors (e.g. Word2Vec trained in TTK) in the "
"embedding layer of the models. To create data processing pipelines, Torch"
" Tagger uses torchtext package. Torch Tagger has been validated on "
"monolingual toxic comment detection, reaching accuracy and F1-score of "
"96%."
msgstr ""

#: ../../source/concepts.rst:149
msgid "Multilingual Processor"
msgstr ""

#: ../../source/concepts.rst:151
msgid "TODO"
msgstr ""

#: ../../source/concepts.rst:156
msgid "Topic Analyzer"
msgstr "Teemaanalüsaator (Topic Analyzer)"

#: ../../source/concepts.rst:158
msgid ""
"Topic Analyzer is a tool that detects groups of similar documents in the "
"data. It can be used for example to explore the structure of the "
"unlabeled data in order to get the understanding about what it contains. "
"However, the main purpose of the tool is to take it one step further and "
"make actual use of one's exploration by transforming their discoveries "
"into the labelling. It can then be used to build supervised machine "
"learning models."
msgstr ""
"Topic Analyzer ehk Teemaanaüsaator on vahend, mis tuvastab andmestikus olevaid sarnaste dokumentide "
"gruppe. Seda saab kasutada näiteks märgendamata andmestiku "
"uurimiseks, et saada aru, mida see sisaldab. "
"Vahendi peamine eesmärk on siiski astuda samm edasi ning kasutada "
"selle tulemusi andmestiku "
"märgendamiseks. Teemaanalüsaatori abil märgendatud teksti saab kasutada juhendatud "
"masinõppemudelite treenimiseks."

#: ../../source/concepts.rst:160
msgid ""
"Topic Analyzer puts to use the best parts of unsupervised clustering and "
"manual labelling. While clustering is a fast and efficient method to "
"create groups of rather similar texts, it still lacks preciseness "
"required to use these clusters as a labelling of the data. For example, "
"while some clusters may indeed contain similar documents, some other will"
" completely fail in capturing the similarity and most of them will "
"probably be so-and-so."
msgstr ""
"Teemaanalüsaator kasutab juhendamata klasterdamise parimaid palu ning "
"käsitsi märgendamist. Klasterdamine on kiire ja tõhus meetod sarnaste tekstide "
"grupeerimiseks. Siiski ei pruugi see olla piisavalt täpne, et tulemusi koheselt "
"kasutada andmete märgendamiseks. Näiteks võivad mõned klastrid tõepoolest sisaldada "
"sarnaseid dokumente, samas võib teistel klastritel see ebaõnnestuda ning kolmandatel olla hinnanguks " 
"'nii-ja-naa'."

#: ../../source/concepts.rst:162
msgid ""
"Topic Analyzer allows user to look inside each cluster and make the "
"decision about the quality manually. Users can also perform various "
"actions on the cluster: remove documents, add more similar documents, and"
" move documents to another more suitable cluster. Finally, user can "
"choose to label the documents inside the cluster if it has reached a "
"sufficient quality."
msgstr ""
"Teemaanalüsaatoris saab vaadata iga klastri sisse ning "
"otsustada kvaliteedi üle käsitsi. Kasutajatel on võimalus ka klastreid muuta: "
"kustutada dokumente, lisada uusi sarnaseid dokumente ning"
" liigutada dokumente ühest klastrist teise, sobivamasse klastrisse. Kui klaster on valmis "
"ja kasutaja on sellega rahul, on võimalik antud dokumente klastris"
" automaatselt vabalt valitud sildiga ära märgendada."

