# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 TEXTA
# This file is distributed under the same license as the TEXTA Toolkit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TEXTA Toolkit 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-21 13:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/embedding.rst:1
msgid "`EN <https://docs.texta.ee/embedding.html>`_"
msgstr ""

#: ../../source/embedding.rst:5
msgid "Embedding"
msgstr ""

#: ../../source/embedding.rst:10
msgid "Create"
msgstr ""

#: ../../source/embedding.rst:13 ../../source/embedding.rst:59
#: ../../source/embedding.rst:88 ../../source/embedding.rst:114
#: ../../source/embedding.rst:137
msgid "GUI"
msgstr ""

#: ../../source/embedding.rst:15
msgid ""
"Navigate to **Models -> Embeddings** and click on the **CREATE** button "
"on top-left. Choose the name for you :ref:`embedding <embedding_concept>`"
" (*Description*). Define the :ref:`query <query_concept>` and select "
"indices on which the :ref:`query <query_concept>` will be executed. If "
"you leave *Query* empty, it will take all documents from the selected "
"indices. If you have any searches defined in your :ref:`project "
"<project_concept>`, they will appear in a dropdown menu if you click on "
"the field *Query* - you can use existing searches as queries."
msgstr ""

#: ../../source/embedding.rst:19
msgid ""
"Choose *fields* on which the :ref:`embedding <embedding_concept>` will be"
" trained. The selected fields should contain textual data."
msgstr ""

#: ../../source/embedding.rst:22
msgid ""
"It is recommended to use lemmatized or tokenized data. Lemmatization is "
"especially useful with morphologically complex languages. You can "
"tokenize and lemmatize the data with :ref:`MLP <mlp>`."
msgstr ""

#: ../../source/embedding.rst:24
msgid ""
"Field *Number of dimensions* defines the length of the word vectors. "
"100-200 dimensions is usually a good place to start with. Field *Minimum "
"frequency* sets how many times a word must occur in the data in minimum "
"in order to get included into the :ref:`embedding <embedding_concept>`. "
"Again, you can leave it with the default value *5* if you are unsure "
"which value to pick."
msgstr ""

#: ../../source/embedding.rst:30
msgid ""
"The quality of the embedding depends on the size of the dataset. The "
"larger the better."
msgstr ""

#: ../../source/embedding.rst:33 ../../source/embedding.rst:72
#: ../../source/embedding.rst:99 ../../source/embedding.rst:120
#: ../../source/embedding.rst:148
msgid "API"
msgstr ""

#: ../../source/embedding.rst:35 ../../source/embedding.rst:74
#: ../../source/embedding.rst:150
msgid "Endpoint: **/projects/{project_pk}/embeddings/**"
msgstr ""

#: ../../source/embedding.rst:37 ../../source/embedding.rst:76
#: ../../source/embedding.rst:103 ../../source/embedding.rst:152
msgid "Example:"
msgstr ""

#: ../../source/embedding.rst:56
msgid "View"
msgstr ""

#: ../../source/embedding.rst:61
msgid ""
"Navigate to **Models -> Embeddings** to view existing :ref:`embedding "
"<embedding_concept>`. If any of your embeddings is still training, the "
"view will show you the progress of the training "
"(:numref:`embedding_view`). Besides than that, the view shows you general"
" information about your embeddings."
msgstr ""

#: ../../source/embedding.rst:69
msgid "*Embedding view*"
msgstr ""

#: ../../source/embedding.rst:85
msgid "Delete"
msgstr ""

#: ../../source/embedding.rst:90
msgid ""
"Navigate to **Models -> Embeddings** and click on the three dots under "
"**Actions** column and choose **Delete** (:numref:`embedding_actions`)."
msgstr ""

#: ../../source/embedding.rst:96
msgid "*Embedding actions*"
msgstr ""

#: ../../source/embedding.rst:101 ../../source/embedding.rst:122
msgid "Endpoint: **/projects/{project_pk}/embeddings/{embedding_id}**"
msgstr ""

#: ../../source/embedding.rst:111
msgid "Edit"
msgstr ""

#: ../../source/embedding.rst:116
msgid ""
"Navigate to **Models -> Embeddings** and click on the three dots under "
"**Actions** column and choose **Edit** (:numref:`embedding_actions`)."
msgstr ""

#: ../../source/embedding.rst:134
msgid "Apply phraser"
msgstr ""

#: ../../source/embedding.rst:139
msgid ""
"Navigate to **Models -> Embeddings**, click on the three dots under "
"**Actions** and choose **Phrase** (:numref:`embedding_actions`). Insert "
"text that you want to phrase and click **Post**. You should see phrased "
"version of the text (:numref:`apply_phraser`)."
msgstr ""

#: ../../source/embedding.rst:145
msgid "*Apply phraser*"
msgstr ""

#~ msgid ""
#~ ":ref:`Embeddings <embedding_concept>` are basically"
#~ " words converted into numerical data "
#~ "(into vectors) that are more "
#~ "understandable and usable for the "
#~ "machine than plain strings (words). With"
#~ " these vectors created, we can "
#~ "compare words and find similar ones. "
#~ "We need embeddings to create, for "
#~ "example, :ref:`lexicons <lexicons>`. Texta "
#~ "Toolkit uses word2vec embeddings with "
#~ "`collocation detection "
#~ "<https://radimrehurek.com/gensim/models/phrases.html>`_. It "
#~ "means that the vectors are created "
#~ "on words and phrases. Phrases are "
#~ "chosen with collocation detection which "
#~ "finds often together occuring words and"
#~ " marks them as phrases."
#~ msgstr ""

#~ msgid ""
#~ "We can create a new embedding by"
#~ " clicking on the '+ CREATE' button"
#~ " in the bottom-left. Then we "
#~ "must choose the name for the new"
#~ " embedding (*Description*). If we leave "
#~ "*Query* empty, it will take all "
#~ "data in the active project as a"
#~ " input. We can also use saved "
#~ "searches as our desired input. Then "
#~ "we must choose the fields the "
#~ "embedding learns from. Embedding needs "
#~ "textual data, so we have to choose"
#~ " fields with text or lemmatized text"
#~ " in it. One field is also "
#~ "enough. Usually lemmatized texts are "
#~ "preferred, especially with morphologically "
#~ "complex languages, because it increases "
#~ "the frequency of some words (*eaten*,"
#~ " *eats* and *ate* will change to "
#~ "it's lemma *eat*)."
#~ msgstr ""

#~ msgid ""
#~ "Then we have to choose the number"
#~ " of dimensions. That means the length"
#~ " of the vectors created. 100-200 "
#~ "dimensions is usually a good place "
#~ "to start with. The minimum frequency "
#~ "defines how many times a word or"
#~ " a phrase has to occur in the"
#~ " data in order to get it's very"
#~ " own word/phrase vector. Rare words/phrases"
#~ " won't have very informative and "
#~ "usable vectors. Minimum frequency of 5"
#~ " can be left as default if we"
#~ " are not sure of what to use."
#~ msgstr ""

#~ msgid "Keep in mind that the bigger the data, the better results!"
#~ msgstr ""

#~ msgid ""
#~ "After creating the new embedding we "
#~ "can view the learning process and "
#~ "results in the embeddings' table. We "
#~ "can see which user created this "
#~ "embedding in this project, the name "
#~ "of the embedding model, field(s) it "
#~ "was trained on, the time it took"
#~ " to train, dimensions, minimum frequency"
#~ " and created vocabulary size. By "
#~ "clicking on the new model's row we"
#~ " can see similar info again."
#~ msgstr ""

#~ msgid ""
#~ "Three dots under *Edit* gives us "
#~ "access to deleting the embedding model"
#~ " or using *Phrase*. *Phrase* is a "
#~ "feature that helps us to check "
#~ "which phrases occur in the embedding "
#~ "model as vectors on their own. It"
#~ " outputs the words and connects "
#~ "phrases with '_'. For example, we "
#~ "can create an embedding model with "
#~ "our saved search 'bribery' (figure 10)."
#~ " If we leave the query empty, "
#~ "the model will be trained on the"
#~ " whole dataset."
#~ msgstr ""

#~ msgid "Figure 12. *Create embedding with saved search*"
#~ msgstr ""

#~ msgid ""
#~ "Navigate to **Models -> Embeddings** and"
#~ " click on the **CREATE** button on"
#~ " top-left. Choose the name for "
#~ "you embedding (*Description*). Define the "
#~ "query and select indices on which "
#~ "the query will be executed. If you"
#~ " leave *Query* empty, it will take"
#~ " all documents from the selected "
#~ "indices. If you have any searches "
#~ "defined in your project, they will "
#~ "appear in a dropdown menu if you"
#~ " click on the field *Query* - "
#~ "you can use existing searches as "
#~ "queries."
#~ msgstr ""

#~ msgid ""
#~ "Choose *fields* on which the embedding"
#~ " will be trained. The selected fields"
#~ " should contain textual data."
#~ msgstr ""

#~ msgid ""
#~ "It is recommended to use lemmatized "
#~ "or tokenized data. Lemmatization is "
#~ "especially useful with morphologically complex"
#~ " languages. You can tokenize and "
#~ "lemmatize the data with MLP."
#~ msgstr ""

#~ msgid ""
#~ "Field *Number of dimensions* defines the"
#~ " length of the word vectors. 100-200"
#~ " dimensions is usually a good place"
#~ " to start with. Field *Minimum "
#~ "frequency* sets how many times a "
#~ "word must occur in the data in "
#~ "minimum in order to get included "
#~ "into the embedding. Again, you can "
#~ "leave it with the default value "
#~ "*5* if you are unsure which value"
#~ " to pick."
#~ msgstr ""

#~ msgid ""
#~ "Navigate to **Models -> Embeddings** to"
#~ " view existing embeddings. If any of"
#~ " your embeddings is still training, "
#~ "the view will show you the "
#~ "progress of the training "
#~ "(:numref:`embedding_view`). Besides than that, "
#~ "the view shows you general information"
#~ " about your embeddings."
#~ msgstr ""

#~ msgid ""
#~ "Navigate to **Models -> Embeddings** and"
#~ " click on the three dots under "
#~ "**Actions** and choose **Phrase** "
#~ "(:numref:`embedding_actions`). Insert text that "
#~ "you want to phrase and click "
#~ "**Post**. You should see phrased version"
#~ " of the text (:numref:`apply_phraser`)."
#~ msgstr ""

