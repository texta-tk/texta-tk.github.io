# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 TEXTA
# This file is distributed under the same license as the TEXTA Toolkit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TEXTA Toolkit 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-02 10:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/embedding.rst:3
msgid "Embedding"
msgstr ""

#: ../../source/embedding.rst:6
msgid "Create"
msgstr ""

#: ../../source/embedding.rst:9 ../../source/embedding.rst:55
#: ../../source/embedding.rst:84 ../../source/embedding.rst:110
#: ../../source/embedding.rst:133
msgid "GUI"
msgstr ""

#: ../../source/embedding.rst:11
msgid ""
"Navigate to **Models -> Embeddings** and click on the **CREATE** button "
"on top-left. Choose the name for you embedding (*Description*). Define "
"the query and select indices on which the query will be executed. If you "
"leave *Query* empty, it will take all documents from the selected "
"indices. If you have any searches defined in your project, they will "
"appear in a dropdown menu if you click on the field *Query* - you can use"
" existing searches as queries."
msgstr ""

#: ../../source/embedding.rst:15
msgid ""
"Choose *fields* on which the embedding will be trained. The selected "
"fields should contain textual data."
msgstr ""

#: ../../source/embedding.rst:18
msgid ""
"It is recommended to use lemmatized or tokenized data. Lemmatization is "
"especially useful with morphologically complex languages. You can "
"tokenize and lemmatize the data with MLP."
msgstr ""

#: ../../source/embedding.rst:20
msgid ""
"Field *Number of dimensions* defines the length of the word vectors. "
"100-200 dimensions is usually a good place to start with. Field *Minimum "
"frequency* sets how many times a word must occur in the data in minimum "
"in order to get included into the embedding. Again, you can leave it with"
" the default value *5* if you are unsure which value to pick."
msgstr ""

#: ../../source/embedding.rst:26
msgid ""
"The quality of the embedding depends on the size of the dataset. The "
"larger the better."
msgstr ""

#: ../../source/embedding.rst:29 ../../source/embedding.rst:68
#: ../../source/embedding.rst:95 ../../source/embedding.rst:116
#: ../../source/embedding.rst:144
msgid "API"
msgstr ""

#: ../../source/embedding.rst:31 ../../source/embedding.rst:70
#: ../../source/embedding.rst:146
msgid "Endpoint: **/projects/{project_pk}/embeddings/**"
msgstr ""

#: ../../source/embedding.rst:33 ../../source/embedding.rst:72
#: ../../source/embedding.rst:99 ../../source/embedding.rst:148
msgid "Example:"
msgstr ""

#: ../../source/embedding.rst:52
msgid "View"
msgstr ""

#: ../../source/embedding.rst:57
msgid ""
"Navigate to **Models -> Embeddings** to view existing embeddings. If any "
"of your embeddings is still training, the view will show you the progress"
" of the training (:numref:`embedding_view`). Besides than that, the view "
"shows you general information about your embeddings."
msgstr ""

#: ../../source/embedding.rst:65
msgid "*Embedding view*"
msgstr ""

#: ../../source/embedding.rst:81
msgid "Delete"
msgstr ""

#: ../../source/embedding.rst:86
msgid ""
"Navigate to **Models -> Embeddings** and click on the three dots under "
"**Actions** column and choose **Delete** (:numref:`embedding_actions`)."
msgstr ""

#: ../../source/embedding.rst:92
msgid "*Embedding actions*"
msgstr ""

#: ../../source/embedding.rst:97 ../../source/embedding.rst:118
msgid "Endpoint: **/projects/{project_pk}/embeddings/{embedding_id}**"
msgstr ""

#: ../../source/embedding.rst:107
msgid "Edit"
msgstr ""

#: ../../source/embedding.rst:112
msgid ""
"Navigate to **Models -> Embeddings** and click on the three dots under "
"**Actions** column and choose **Edit** (:numref:`embedding_actions`)."
msgstr ""

#: ../../source/embedding.rst:130
msgid "Apply phraser"
msgstr ""

#: ../../source/embedding.rst:135
msgid ""
"Navigate to **Models -> Embeddings** and click on the three dots under "
"**Actions** and choose **Phrase** (:numref:`embedding_actions`). Insert "
"text that you want to phrase and click **Post**. You should see phrased "
"version of the text (:numref:`apply_phraser`)."
msgstr ""

#: ../../source/embedding.rst:141
msgid "*Apply phraser*"
msgstr ""

#~ msgid ""
#~ ":ref:`Embeddings <embedding_concept>` are basically"
#~ " words converted into numerical data "
#~ "(into vectors) that are more "
#~ "understandable and usable for the "
#~ "machine than plain strings (words). With"
#~ " these vectors created, we can "
#~ "compare words and find similar ones. "
#~ "We need embeddings to create, for "
#~ "example, :ref:`lexicons <lexicons>`. Texta "
#~ "Toolkit uses word2vec embeddings with "
#~ "`collocation detection "
#~ "<https://radimrehurek.com/gensim/models/phrases.html>`_. It "
#~ "means that the vectors are created "
#~ "on words and phrases. Phrases are "
#~ "chosen with collocation detection which "
#~ "finds often together occuring words and"
#~ " marks them as phrases."
#~ msgstr ""

#~ msgid ""
#~ "We can create a new embedding by"
#~ " clicking on the '+ CREATE' button"
#~ " in the bottom-left. Then we "
#~ "must choose the name for the new"
#~ " embedding (*Description*). If we leave "
#~ "*Query* empty, it will take all "
#~ "data in the active project as a"
#~ " input. We can also use saved "
#~ "searches as our desired input. Then "
#~ "we must choose the fields the "
#~ "embedding learns from. Embedding needs "
#~ "textual data, so we have to choose"
#~ " fields with text or lemmatized text"
#~ " in it. One field is also "
#~ "enough. Usually lemmatized texts are "
#~ "preferred, especially with morphologically "
#~ "complex languages, because it increases "
#~ "the frequency of some words (*eaten*,"
#~ " *eats* and *ate* will change to "
#~ "it's lemma *eat*)."
#~ msgstr ""

#~ msgid ""
#~ "Then we have to choose the number"
#~ " of dimensions. That means the length"
#~ " of the vectors created. 100-200 "
#~ "dimensions is usually a good place "
#~ "to start with. The minimum frequency "
#~ "defines how many times a word or"
#~ " a phrase has to occur in the"
#~ " data in order to get it's very"
#~ " own word/phrase vector. Rare words/phrases"
#~ " won't have very informative and "
#~ "usable vectors. Minimum frequency of 5"
#~ " can be left as default if we"
#~ " are not sure of what to use."
#~ msgstr ""

#~ msgid "Keep in mind that the bigger the data, the better results!"
#~ msgstr ""

#~ msgid ""
#~ "After creating the new embedding we "
#~ "can view the learning process and "
#~ "results in the embeddings' table. We "
#~ "can see which user created this "
#~ "embedding in this project, the name "
#~ "of the embedding model, field(s) it "
#~ "was trained on, the time it took"
#~ " to train, dimensions, minimum frequency"
#~ " and created vocabulary size. By "
#~ "clicking on the new model's row we"
#~ " can see similar info again."
#~ msgstr ""

#~ msgid ""
#~ "Three dots under *Edit* gives us "
#~ "access to deleting the embedding model"
#~ " or using *Phrase*. *Phrase* is a "
#~ "feature that helps us to check "
#~ "which phrases occur in the embedding "
#~ "model as vectors on their own. It"
#~ " outputs the words and connects "
#~ "phrases with '_'. For example, we "
#~ "can create an embedding model with "
#~ "our saved search 'bribery' (figure 10)."
#~ " If we leave the query empty, "
#~ "the model will be trained on the"
#~ " whole dataset."
#~ msgstr ""

#~ msgid "Figure 12. *Create embedding with saved search*"
#~ msgstr ""

