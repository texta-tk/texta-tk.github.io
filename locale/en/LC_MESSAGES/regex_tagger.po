# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 TEXTA
# This file is distributed under the same license as the TEXTA Toolkit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TEXTA Toolkit 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-01 22:21+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/regex_tagger.rst:1
msgid ""
"`EN <https://docs.texta.ee/v2/regex_tagger.html>`_ `ET "
"<https://docs.texta.ee/v2/et/regex_tagger.html>`_"
msgstr ""

#: ../../source/regex_tagger.rst:6
msgid "Regex Tagger"
msgstr ""

#: ../../source/regex_tagger.rst:8
msgid ""
":ref:`Regex Tagger <regex_tagger_concept>` is a tool for tagging texts "
"based on pattern matches."
msgstr ""

#: ../../source/regex_tagger.rst:11
msgid "**Terminology**"
msgstr ""

#: ../../source/regex_tagger.rst:13
msgid ""
"To avoid misinterpretation, let's first define the meanings of \"word\" "
"and \"lexicon entry\" in the scope of Regex Tagger."
msgstr ""

#: ../../source/regex_tagger.rst:16
msgid "Termin"
msgstr ""

#: ../../source/regex_tagger.rst:16
msgid "Definition"
msgstr ""

#: ../../source/regex_tagger.rst:16 ../../source/regex_tagger.rst:204
#: ../../source/regex_tagger.rst:246 ../../source/regex_tagger.rst:297
#: ../../source/regex_tagger.rst:352 ../../source/regex_tagger.rst:397
msgid "Examples"
msgstr ""

#: ../../source/regex_tagger.rst:18
msgid "**word**"
msgstr ""

#: ../../source/regex_tagger.rst:18
msgid ""
"String consisting of non-whitespace characters. NB! regex whitespace "
"wildcards are in this case included as non-whitepace characters!"
msgstr ""

#: ../../source/regex_tagger.rst:18
msgid "\"cats\", \"house\", \"\\\\d\\\\s*cat\\\\w*\""
msgstr ""

#: ../../source/regex_tagger.rst:19
msgid "**lexicon entry**"
msgstr ""

#: ../../source/regex_tagger.rst:19
msgid ""
"One entry in a lexicon. Lexicon entry can either be a single word, "
"multiple words separated by whitespaces, or a regex pattern."
msgstr ""

#: ../../source/regex_tagger.rst:19
msgid "\"cat\", \"dogs cats hats\", \"\\\\d\\\\s*cat\\\\w*\""
msgstr ""

#: ../../source/regex_tagger.rst:24
msgid "Creation"
msgstr ""

#: ../../source/regex_tagger.rst:28
msgid "Parameters"
msgstr ""

#: ../../source/regex_tagger.rst:31
msgid "**description**:"
msgstr ""

#: ../../source/regex_tagger.rst:31
msgid ""
"Name of the Regex Tagger, which is also used as name of the tag while "
"tagging the documents"
msgstr ""

#: ../../source/regex_tagger.rst:34
msgid "**lexicon**:"
msgstr ""

#: ../../source/regex_tagger.rst:34
msgid ""
"List of lexicon entries to match (as comma-separated strings in API and "
"newline-separated strings in GUI)"
msgstr ""

#: ../../source/regex_tagger.rst:37
msgid "**counter_lexicon**:"
msgstr ""

#: ../../source/regex_tagger.rst:37
msgid "List of nullifying lexicon entries."
msgstr ""

#: ../../source/regex_tagger.rst:46
msgid "**operator**:"
msgstr ""

#: ../../source/regex_tagger.rst:40
msgid "Logical operator for matching words in the lexicon."
msgstr ""

#: ../../source/regex_tagger.rst:46 ../../source/regex_tagger.rst:61
msgid "Supported options:"
msgstr ""

#: ../../source/regex_tagger.rst:43
msgid "or:"
msgstr ""

#: ../../source/regex_tagger.rst:44
msgid "return positive result if at least one lexicon entry is found"
msgstr ""

#: ../../source/regex_tagger.rst:46
msgid "and:"
msgstr ""

#: ../../source/regex_tagger.rst:46
msgid ""
"return positive result only if all lexicon entries are found (PS! pay "
"attention to *required_words* parameter!)"
msgstr ""

#: ../../source/regex_tagger.rst:49
msgid "**required_words**:"
msgstr ""

#: ../../source/regex_tagger.rst:49
msgid ""
"Required minimum ratio of detected lexicon entries to all the lexicon "
"entries for a positive result."
msgstr ""

#: ../../source/regex_tagger.rst:61
msgid "**match_type**:"
msgstr ""

#: ../../source/regex_tagger.rst:52
msgid "How the lexicon entries should be matched."
msgstr ""

#: ../../source/regex_tagger.rst:56
msgid "prefix:"
msgstr ""

#: ../../source/regex_tagger.rst:56
msgid ""
"matches all strings starting with lexicon entities (to the first "
"whitespace)"
msgstr ""

#: ../../source/regex_tagger.rst:58
msgid "exact:"
msgstr ""

#: ../../source/regex_tagger.rst:59
msgid "detects only exact matches to the lexicon entities"
msgstr ""

#: ../../source/regex_tagger.rst:61
msgid "subword:"
msgstr ""

#: ../../source/regex_tagger.rst:61
msgid "matches all entities containing lexicon entities as subentities"
msgstr ""

#: ../../source/regex_tagger.rst:64
msgid "**phrase_slop**:"
msgstr ""

#: ../../source/regex_tagger.rst:64
msgid "Number of non-lexicon words allowed between lexicon entry words."
msgstr ""

#: ../../source/regex_tagger.rst:67
msgid "**counter_slop**:"
msgstr ""

#: ../../source/regex_tagger.rst:67
msgid ""
"Number of non-lexicon words allowed between main lexion entries and "
"counter lexicon entries."
msgstr ""

#: ../../source/regex_tagger.rst:70
msgid "**return_fuzzy_match**:"
msgstr ""

#: ../../source/regex_tagger.rst:70
msgid ""
"If set true, return the whole string sequence matched instead of the "
"original lexicon entry."
msgstr ""

#: ../../source/regex_tagger.rst:76
msgid "**n_allowed_edits**:"
msgstr ""

#: ../../source/regex_tagger.rst:76
msgid ""
"Number of allowed character changes between lexicon entry and matched "
"string sequence. One edit is considered as one of the following:"
msgstr ""

#: ../../source/regex_tagger.rst:74
msgid "missing a character (\"cat\" -> \"ct\")"
msgstr ""

#: ../../source/regex_tagger.rst:75
msgid "adding a character (\"cat\" -> \"catt\")"
msgstr ""

#: ../../source/regex_tagger.rst:76
msgid "substituting a character (\"cat\" -> \"kat\")"
msgstr ""

#: ../../source/regex_tagger.rst:80
msgid "**ignore_case**:"
msgstr ""

#: ../../source/regex_tagger.rst:79
msgid "If set true, ignore case while detecting matches."
msgstr ""

#: ../../source/regex_tagger.rst:83
msgid "**ignore punctuation**:"
msgstr ""

#: ../../source/regex_tagger.rst:83
msgid ""
"If set true, ignore end-of-sentence characters between lexicon entry "
"words and/or counter lexicon entries and lexicon entries. Otherwise"
msgstr ""

#: ../../source/regex_tagger.rst:86 ../../source/regex_tagger.rst:139
msgid "GUI"
msgstr ""

#: ../../source/regex_tagger.rst:88
msgid ""
"For creating a new Regex Tagger model, navigate to `\"Models\" -> \"Regex"
" Taggers\"` as seen in :numref:`regex_tagger_navigation`."
msgstr ""

#: ../../source/regex_tagger.rst:94
msgid "*Regex Taggers navigation*"
msgstr ""

#: ../../source/regex_tagger.rst:96
msgid ""
"If the navigation is successful, you should see a panel similar to "
":numref:`regex_tagger_create_button` with `\"Create\"` button in the top "
"left corner of the page."
msgstr ""

#: ../../source/regex_tagger.rst:102
msgid "*Regex Tagger creation button*"
msgstr ""

#: ../../source/regex_tagger.rst:104
msgid ""
"Clicking on the `\"Create\"` button opens a modal window with text `\"New"
" Regex Tagger\"` as depicted in :numref:`regex_tagger_new_regex_tagger`."
msgstr ""

#: ../../source/regex_tagger.rst:110
msgid "*Empty Regex Tagger creation view*"
msgstr ""

#: ../../source/regex_tagger.rst:112
msgid ""
"Fill the required fields as instructed in TODO and click on the "
"`\"Create\"` button in the bottom right corner of the window "
"(:numref:`regex_tagger_create_view`)."
msgstr ""

#: ../../source/regex_tagger.rst:118
msgid "*Filled Regex Tagger creation view*"
msgstr ""

#: ../../source/regex_tagger.rst:120
msgid ""
"The created Regex Tagger can now be seen as the first (or only, if no "
"previous Regex Taggers exist under the project) row in the table of Regex"
" Tagger models (:numref:`regex_taggers_list`)."
msgstr ""

#: ../../source/regex_tagger.rst:126
msgid "*List of Regex Taggers.*"
msgstr ""

#: ../../source/regex_tagger.rst:129 ../../source/regex_tagger.rst:157
msgid "API"
msgstr ""

#: ../../source/regex_tagger.rst:131 ../../source/regex_tagger.rst:182
#: ../../source/regex_tagger.rst:496 ../../source/regex_tagger.rst:502
#: ../../source/regex_tagger.rst:507 ../../source/regex_tagger.rst:512
msgid "# TODO"
msgstr ""

#: ../../source/regex_tagger.rst:134
msgid "Usage"
msgstr ""

#: ../../source/regex_tagger.rst:136
msgid ""
"The following section covers all functions supported by Regex Tagger. PS!"
" Some of the functions can only be applied through API as they have no "
"meaningful usage scenarios in GUI."
msgstr ""

#: ../../source/regex_tagger.rst:142 ../../source/regex_tagger.rst:161
msgid "Tag Text"
msgstr ""

#: ../../source/regex_tagger.rst:146 ../../source/regex_tagger.rst:169
msgid "Tag Random Doc"
msgstr ""

#: ../../source/regex_tagger.rst:149 ../../source/regex_tagger.rst:173
msgid "Delete"
msgstr ""

#: ../../source/regex_tagger.rst:153 ../../source/regex_tagger.rst:177
msgid "Edit"
msgstr ""

#: ../../source/regex_tagger.rst:165
msgid "Tag Docs"
msgstr ""

#: ../../source/regex_tagger.rst:186
msgid "Fine-Tuning"
msgstr ""

#: ../../source/regex_tagger.rst:188
msgid ""
"Let's inspect how different parameter configurations can affect the "
"result for gaining a better understanding of their functions."
msgstr ""

#: ../../source/regex_tagger.rst:195
msgid "Counter Lexicon"
msgstr ""

#: ../../source/regex_tagger.rst:211 ../../source/regex_tagger.rst:222
msgid "**Result**:"
msgstr ""

#: ../../source/regex_tagger.rst:232
msgid "Phrase Slop"
msgstr ""

#: ../../source/regex_tagger.rst:252 ../../source/regex_tagger.rst:264
#: ../../source/regex_tagger.rst:275 ../../source/regex_tagger.rst:304
#: ../../source/regex_tagger.rst:318 ../../source/regex_tagger.rst:330
#: ../../source/regex_tagger.rst:359 ../../source/regex_tagger.rst:373
#: ../../source/regex_tagger.rst:403 ../../source/regex_tagger.rst:417
#: ../../source/regex_tagger.rst:448 ../../source/regex_tagger.rst:465
#: ../../source/regex_tagger.rst:482
msgid "**Results:**"
msgstr ""

#: ../../source/regex_tagger.rst:284
msgid "Match Type"
msgstr ""

#: ../../source/regex_tagger.rst:339
msgid "Operator"
msgstr ""

#: ../../source/regex_tagger.rst:383
msgid "Required Words"
msgstr ""

#: ../../source/regex_tagger.rst:427
msgid "N Allowed Edits"
msgstr ""

#: ../../source/regex_tagger.rst:494
msgid "Return Fuzzy Match"
msgstr ""

#: ../../source/regex_tagger.rst:500
msgid "Ignore Case"
msgstr ""

#: ../../source/regex_tagger.rst:505
msgid "Ignore Punctuation"
msgstr ""

#: ../../source/regex_tagger.rst:510
msgid "Counter Slop"
msgstr ""

#~ msgid ""
#~ "For avoiding confusion, let's first "
#~ "define the meanings of \"word\" and "
#~ "\"lexicon entry\" in the scope of "
#~ "Regex Tagger."
#~ msgstr ""

#~ msgid "word"
#~ msgstr ""

#~ msgid ""
#~ "String consisting of non-whitespace "
#~ "characters. NB! regex whitespace wildcards "
#~ "are in this case included as "
#~ "non-whitepace characters! One entry in "
#~ "a lexicon. Lexicon entry can either "
#~ "be a single word, multiple words "
#~ "separated by whitespaces, or a regex "
#~ "pattern."
#~ msgstr ""

#~ msgid "lexicon entry"
#~ msgstr ""

#~ msgid "Required:"
#~ msgstr ""

#~ msgid "True"
#~ msgstr ""

#~ msgid "False"
#~ msgstr ""

