# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 TEXTA
# This file is distributed under the same license as the TEXTA Toolkit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TEXTA Toolkit 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-27 12:54+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/searcher.rst:1
msgid ""
"`EN <https://docs.texta.ee/v2/searcher.html>`_ `ET "
"<https://docs.texta.ee/v2/et/searcher.html>`_"
msgstr ""

#: ../../source/searcher.rst:6
msgid "Search"
msgstr ""

#: ../../source/searcher.rst:8
msgid ""
"The Search application allows users to perform searches and aggregations "
"over the data. Search results can be used as input to machine learning "
"models."
msgstr ""

#: ../../source/searcher.rst:11
msgid ""
"To use the **Search** project and indices must be selected from the upper"
" right panel."
msgstr ""

#: ../../source/searcher.rst:13
msgid ""
"The Search's graphical interface (:numref:`search_panel`) consists of "
"three panels. These are :ref:`Current Search <currentsearch>`, "
":ref:`Saved Searches <savedsearches>`, and :ref:`Aggregations "
"<aggregations>`. By default the panel of Current Search open. Clicking on"
" the name of the panel collapses or opens that panel."
msgstr ""

#: ../../source/searcher.rst:20
msgid "*Search panels*"
msgstr ""

#: ../../source/searcher.rst:23
msgid ""
"The Searcher will only look into the datasets that are selected on the "
"top-right panel."
msgstr ""

#: ../../source/searcher.rst:28
msgid "Current Search"
msgstr ""

#: ../../source/searcher.rst:31 ../../source/searcher.rst:233
#: ../../source/searcher.rst:252
msgid "GUI"
msgstr ""

#: ../../source/searcher.rst:33
msgid ""
"Current Search is a tool for simple data browsing. It also allows us to "
"create filters to only search for documents in our interest. For the "
"latter purpose, we can create a set of constraints on :ref:`field "
"<field_concept>` values. This can be done using either Simple Search or "
"Advanced Search."
msgstr ""

#: ../../source/searcher.rst:38
msgid ""
"Current Search doesn't differentiate lower and upper case (except regex "
"constraint). This means that searching for \"President\" also matches "
"\"president\". If the case is important in the search, use regex "
"constraint (see below)."
msgstr ""

#: ../../source/searcher.rst:42
msgid "Simple Search"
msgstr ""

#: ../../source/searcher.rst:44
msgid ""
"Simple search searches for a word or words on all fields in the chosen "
"dataset(s). Multiple words must be separated with space (\" \"). The "
"search returns documents where each word occurs at least in one of the "
"fields."
msgstr ""

#: ../../source/searcher.rst:49
msgid ""
"To use Simple Search, select it on the Current Search panel and type in "
"the words you want to search for (:ref:`field <simple_search>` values)."
msgstr ""

#: ../../source/searcher.rst:54
msgid "*Simple search*"
msgstr ""

#: ../../source/searcher.rst:57
msgid "Advanced Search"
msgstr ""

#: ../../source/searcher.rst:59
msgid ""
"Advanced search allows us to create different constraints for different "
"fields. There are three types of constraints we can use: string "
"constraints, date constraints, and texta_facts constraints."
msgstr ""

#: ../../source/searcher.rst:62
msgid ""
"To use Advanced Search, select it on the Current Search panel. After that"
" select fields on which you want to use your constraint. Click anywhere "
"in the toolkit to close the fields' selection. You should see a box where"
" you can create your constraint (:ref:`field <string_search>`). You can "
"remove the constraint by clicking on the ‘X’-sign on the upper right "
"corner of the box."
msgstr ""

#: ../../source/searcher.rst:69
msgid "*Advanced search*"
msgstr ""

#: ../../source/searcher.rst:73
msgid "String constraint"
msgstr ""

#: ../../source/searcher.rst:75
msgid ""
"Different search strings must be written to different lines. The search "
"strings must be tied with one of the **Operator** from the table below:"
msgstr ""

#: ../../source/searcher.rst:78
msgid "Operators"
msgstr ""

#: ../../source/searcher.rst:82
msgid "Operator"
msgstr ""

#: ../../source/searcher.rst:83 ../../source/searcher.rst:99
#: ../../source/searcher.rst:170
msgid "Meaning"
msgstr ""

#: ../../source/searcher.rst:84
msgid "and"
msgstr ""

#: ../../source/searcher.rst:85
msgid "all of the search strings (lines) are matched in the document"
msgstr ""

#: ../../source/searcher.rst:86
msgid "or"
msgstr ""

#: ../../source/searcher.rst:87
msgid "at least one of the search string (lines) is matched in the document"
msgstr ""

#: ../../source/searcher.rst:88
msgid "not"
msgstr ""

#: ../../source/searcher.rst:89
msgid "the document must not match any of the given search string"
msgstr ""

#: ../../source/searcher.rst:92
msgid "You must also choose a **Match** rule. These are given in the table below:"
msgstr ""

#: ../../source/searcher.rst:94
msgid "Match"
msgstr ""

#: ../../source/searcher.rst:98
msgid "Match rule"
msgstr ""

#: ../../source/searcher.rst:100
msgid "phrase prefix"
msgstr ""

#: ../../source/searcher.rst:101
msgid ""
"matches the beginning of the words (endings can differ, e.g. searching "
"for 'bribe' gives us 'bribe', 'bribery', 'bribetaking', etc)"
msgstr ""

#: ../../source/searcher.rst:102
msgid "word"
msgstr ""

#: ../../source/searcher.rst:103
msgid "finds exact word written (similar to simple search)"
msgstr ""

#: ../../source/searcher.rst:104
msgid "phrase"
msgstr ""

#: ../../source/searcher.rst:105
msgid "finds exact match for a phrase (more than one word in one line)"
msgstr ""

#: ../../source/searcher.rst:106
msgid "regex"
msgstr ""

#: ../../source/searcher.rst:107
msgid ""
"takes the input as `a regular expression <https://www.rexegg.com/regex-"
"quickstart.html>`_ and searches document accordingly. Nb! This is "
":ref:`Elasticsearch <elasticsearch>` syntax."
msgstr ""

#: ../../source/searcher.rst:109
msgid ""
"Finally, there is a value called **Slop**. If any of your search strings "
"contains multiple words, then this defines how many words can be between "
"that search string words."
msgstr ""

#: ../../source/searcher.rst:112
msgid ""
"In figure :ref:`field <string_search>`, the string constraint is on the "
"field named \"text\". The search will return documents that have either "
"phrase \"president Obama\" or \"president Trump\" in it (or both). Since "
"the Slop is 2, it also matches the phrase if it has 0-2 words between the"
" words (e.g \"president Barack Obama\")."
msgstr ""

#: ../../source/searcher.rst:117
msgid ""
"You can use an existing :ref:`lexicon <lexiconminer>` to create "
"constraints. This can be done via button **Add lexicon** (visible only if"
" there exist any lexicons in the project.\""
msgstr ""

#: ../../source/searcher.rst:120
msgid "Date constraint"
msgstr ""

#: ../../source/searcher.rst:122
msgid ""
"Date constraint is for fields with type date. This outputs only documents"
" where the field value is within the chosen time range (starting day "
"included and ending day excluded). You can choose the time range by "
"clicking on the little calendar on the right."
msgstr ""

#: ../../source/searcher.rst:128
msgid "*Date constraint*"
msgstr ""

#: ../../source/searcher.rst:131
msgid "Texta_facts constraint"
msgstr ""

#: ../../source/searcher.rst:133
msgid ""
"Texta_facts constraint allows us to find documents with certain "
":ref:`fact <texta_fact>` names or fact values."
msgstr ""

#: ../../source/searcher.rst:135
msgid "**Creating a constraint over fact names**"
msgstr ""

#: ../../source/searcher.rst:140
msgid ""
"*Fact name constraint with or*. Outputs all documents that contain at "
"least one of the given fact name."
msgstr ""

#: ../../source/searcher.rst:143
msgid "**Using different constraints for different fact names**"
msgstr ""

#: ../../source/searcher.rst:145
msgid ""
"In order to use different constraints for different fact names, you need "
"to select field **texta_facts[fact_name]** multiple times."
msgstr ""

#: ../../source/searcher.rst:150
msgid ""
"*Fact name constraint*. Outputs documents that contain an ORG fact and "
"definitely not PER fact."
msgstr ""

#: ../../source/searcher.rst:152
msgid "**Creating a constraint over fact values**"
msgstr ""

#: ../../source/searcher.rst:157
msgid ""
"*Fact value constraint*. Outputs documents that have an ORG fact with "
"either value \"NATO\" or value \"European Union\" in it (or both)."
msgstr ""

#: ../../source/searcher.rst:161
msgid "Search Options"
msgstr ""

#: ../../source/searcher.rst:163
msgid "Look at the table below for the meanings of search options."
msgstr ""

#: ../../source/searcher.rst:165
msgid "Search options"
msgstr ""

#: ../../source/searcher.rst:169
msgid "Option"
msgstr ""

#: ../../source/searcher.rst:171
msgid "Highlight facts"
msgstr ""

#: ../../source/searcher.rst:172
msgid "highlights all the facts in the text"
msgstr ""

#: ../../source/searcher.rst:173
msgid "Only highlight matching facts"
msgstr ""

#: ../../source/searcher.rst:174
msgid "highlights only the facts that were looked for"
msgstr ""

#: ../../source/searcher.rst:175
msgid "Highlight searcher matches"
msgstr ""

#: ../../source/searcher.rst:176
msgid "highlights string constraints' matches"
msgstr ""

#: ../../source/searcher.rst:177
msgid "Show short version"
msgstr ""

#: ../../source/searcher.rst:178
msgid "shows certain amount of words before and after the match"
msgstr ""

#: ../../source/searcher.rst:183
msgid "*Search Options*"
msgstr ""

#: ../../source/searcher.rst:186
msgid "Advanced Search examples"
msgstr ""

#: ../../source/searcher.rst:191
msgid ""
"*Regex String Constraint*. Search for documents that have either "
"\"payoff\" or \"bribe[a-z]{0,2}\" in it.The latter condition means that "
"word ‘bribe’ can have 0-2 extra letters (e.g “bribe”, “bribed”, "
"“bribery”) in the end."
msgstr ""

#: ../../source/searcher.rst:196
msgid ""
"*Combination of constraints*. Search for documents published in 2014, "
"contain LOC facts with values \"Russia\" and \"Ukraine\" and the word "
"\"invasion\"."
msgstr ""

#: ../../source/searcher.rst:200
msgid "Browsing Search results"
msgstr ""

#: ../../source/searcher.rst:202
msgid ""
"After clicking the “Search” button, the matching documents are shown. "
"(see :numref:`search_results`)."
msgstr ""

#: ../../source/searcher.rst:208
msgid "*Example search results*"
msgstr ""

#: ../../source/searcher.rst:210
msgid ""
"You can choose the columns that we would like to see from the drop-down "
"menu right above the results. You can select or deselect all of them "
"together (*Select all*) or by clicking on them separately."
msgstr ""

#: ../../source/searcher.rst:213
msgid ""
"It is possible to hide the constraint panels with the *Toggle drawer* "
"button."
msgstr ""

#: ../../source/searcher.rst:215
msgid ""
"Use arrows in the upper right to navigate between pages. You can also "
"choose how many items per page you would like to see (also in the upper "
"right corner)."
msgstr ""

#: ../../source/searcher.rst:220
msgid "*Select Fields for Search Results*"
msgstr ""

#: ../../source/searcher.rst:223 ../../source/searcher.rst:242
msgid "API"
msgstr ""

#: ../../source/searcher.rst:225
msgid ""
"API for scrolling can be found `here <https://rest-"
"dev.texta.ee/api/v1/projects/1/scroll/>`_."
msgstr ""

#: ../../source/searcher.rst:230
msgid "Saved Searches"
msgstr ""

#: ../../source/searcher.rst:235
msgid ""
"To save a search, click on the **disk** icon in the upper right corner of"
" the Current Search panel. Saved searches can be used in other "
"applications available in Texta Toolkit. For example, you can use a "
"search as a set of positive samples when training a tagger or as a set of"
" documents to be analyzed with Topic Analyzer. Or you might just want to "
"save a search for browsing it later: to open it in the Current Search, "
"simply click on the name of it."
msgstr ""

#: ../../source/searcher.rst:239
msgid ""
"If you are curious, you can see the actual :ref:`Elasticsearch "
"<elasticsearch>` query behind the search by clicking on the **eye** icon "
"next to the disk icon."
msgstr ""

#: ../../source/searcher.rst:244
msgid ""
"API support for saving searches can be found `here <https://rest-"
"dev.texta.ee/api/v1/projects/1/searches/>`_."
msgstr ""

#: ../../source/searcher.rst:249
msgid "Aggregations"
msgstr ""

#: ../../source/searcher.rst:254
msgid ""
"Aggregations tool allows us to aggregate the data. For example, we can "
"use it to perform simple aggregations - retrieve item and word "
"distributions."
msgstr ""

#: ../../source/searcher.rst:257
msgid ""
"For instance, let's assume we have a dataset containing posts from "
"Estonian Reddit. We can use an aggregation over field *post_title* to "
"find the most popular threads (see :numref:`significant_items`)."
msgstr ""

#: ../../source/searcher.rst:262
msgid "*Significant items*"
msgstr ""

#: ../../source/searcher.rst:264
msgid ""
"Now, knowing that the most popular thread is *Coronavirus megathread*, we"
" might want to know what are the words that characterize the dataset when"
" compared to other threads. In Texta Toolkit such words are called "
"**significant words** and can be found with aggregations tool (see "
":numref:`significant_words`)."
msgstr ""

#: ../../source/searcher.rst:270
msgid "*Significant words*"
msgstr ""

#: ../../source/searcher.rst:273
msgid "**How are the significance scores calculated?**"
msgstr ""

#: ../../source/searcher.rst:274
msgid ""
"In brief, a term is considered significant if there is a noticeable "
"difference in the frequency in which a term appears in the subset and in "
"the background."
msgstr ""

#: ../../source/searcher.rst:277
msgid ""
"Besides these simple words and items aggregations shown above, there is "
"still so much more that you can do with the tool."
msgstr ""

#: ../../source/searcher.rst:279
msgid ""
"For example, you can examine the distribution of the data over time (see "
":numref:`simple_time_aggregation`). Note that to produce such graphs, you"
" must have a proper date field (in Texta date format) in the data."
msgstr ""

#: ../../source/searcher.rst:284
msgid "*Time aggregation*"
msgstr ""

#: ../../source/searcher.rst:286
msgid ""
"If you have texta_facts added to your data, you can visualize the "
"frequencies of the values of one or more facts (see "
":numref:`facts_aggre`). Note that on top of the plot in figure "
":numref:`facts_aggre`, there is a list with three visualization options. "
"You can click on them to change how the results are displayed - whether "
"hierarchically, as a table, or as a plot."
msgstr ""

#: ../../source/searcher.rst:293
msgid "*Facts aggregation*"
msgstr ""

#: ../../source/searcher.rst:295
msgid ""
"By creating a set of saved searches, we can visualize the time "
"distribution of multiple subsets at once. For example, if we have a news "
"articles datasets, we might want to know how often different politicians "
"were mentioned in the news in different time periods (see "
":numref:`saved_searches_aggre`)."
msgstr ""

#: ../../source/searcher.rst:301
msgid "*Saved searches aggregation*"
msgstr ""

#~ msgid ""
#~ "In order to add a constraint, we"
#~ " must first choose one or several "
#~ "fields. After the field is selected, "
#~ "we can then specify which textual "
#~ "tokens (words or word parts) should "
#~ "or must occur in the interested "
#~ "document subset."
#~ msgstr ""

#~ msgid ""
#~ "We must notice that the search "
#~ "will be done on the Project's "
#~ "dataset chosen in the upper panel."
#~ msgstr ""

#~ msgid ""
#~ "Suppose we are interested in finding "
#~ "all the documents which contains "
#~ "“bribery” and “official” from a text."
#~ " :numref:`search_constraints` shows how we "
#~ "have defined that we want to find"
#~ " all the documents which contain "
#~ "“bribery” and “official” in the "
#~ "article_text_mlp.text field:"
#~ msgstr ""

#~ msgid "*Example Search Constraints*"
#~ msgstr ""

#~ msgid "Searches have several parameters to consider:"
#~ msgstr ""

#~ msgid ""
#~ "We can also choose ‘or’ or ‘not’"
#~ " under the Operator. In this case "
#~ "we either get documents containing at"
#~ " least one of the words (‘or’) "
#~ "or definitely not containing the words"
#~ " listed (‘not’)."
#~ msgstr ""

#~ msgid ""
#~ "We can choose from several match "
#~ "types. Type “word” means that we "
#~ "want to find exact matches of the"
#~ " word(s) written and “phrase” means "
#~ "that we want to find exact matches"
#~ " of the phrases we are looking "
#~ "for, whereas “Phrase prefix” matches "
#~ "prefixes. This means suffixes may "
#~ "differ: for example searching for "
#~ "‘bribe’ will find ‘bribetaking’, ‘bribers’,"
#~ " ‘bribery’ and other words starting "
#~ "with ‘bribe’. 'regex' takes the input"
#~ " as `a regular expression "
#~ "<https://www.rexegg.com/regex-quickstart.html>`_ and "
#~ "searches document accordingly. For example "
#~ "'bribe.{0,2}' will find 'bribe' and "
#~ "'bribery', but not longer words. If "
#~ "we have a big list of words "
#~ "we want to search for, we can "
#~ "extend the field searcher's panel."
#~ msgstr ""

#~ msgid ""
#~ "We can also use Slop. Via Slop "
#~ "we can define up to how many "
#~ "words can be between the two words"
#~ " we wrote on one row in case"
#~ " the range is important for us."
#~ msgstr ""

#~ msgid ""
#~ "Should we be interested in more "
#~ "detailed searches, we can add more "
#~ "constraints like the previous ones via"
#~ " **Add Filter** button. For example, "
#~ "we can also search documents in a"
#~ " certain date range in case we "
#~ "have a proper preprocessed date field."
#~ msgstr ""

#~ msgid ""
#~ "If we click on “Search” button, we"
#~ " will see the matching data in "
#~ "a tabular form (see :numref:`search_results`),"
#~ " where layered features share feature "
#~ "name’s prefix, and matches are "
#~ "highlighted in pink. The results might"
#~ " be updating while modifying the "
#~ "filters."
#~ msgstr ""

#~ msgid ""
#~ "If there are too many features "
#~ "(columns), we can hide or show "
#~ "them from the drop-down menu in"
#~ " the down left corner. We can "
#~ "select or deselect all of them "
#~ "together (*Select all*) or by clicking"
#~ " on them separately. We can also "
#~ "hide or get back the Searcher's "
#~ "panels with *Toggle drawer* button. We"
#~ " can browse through Searcher's results "
#~ "with the arrows in the bottom "
#~ "right. We can also choose how many"
#~ " items per page would we want "
#~ "to see."
#~ msgstr ""

#~ msgid ""
#~ "After we have come up with a "
#~ "suitable search, we can save it "
#~ "for later use by clicking on the"
#~ " **disk** icon up-right in the "
#~ "Current Search panel. The **eye** icon"
#~ " next to the disk icon shows us"
#~ " the actual Elasticsearch query we "
#~ "built by choosing the Operators and "
#~ "words to search for."
#~ msgstr ""

#~ msgid ""
#~ "After saving a search, it becomes "
#~ "available for using in Toolkit's "
#~ "applications. Now, whenever we check it,"
#~ " we can use it to browse data"
#~ " or apply in aggregations. We can "
#~ "also send our saved search to "
#~ "other users who have the permission "
#~ "to our project with a copied url."
#~ " This opens the saved search under"
#~ " the Current Search for the other "
#~ "user. We can also open our saved"
#~ " search in the Current Search simply"
#~ " by clicking on it."
#~ msgstr ""

#~ msgid "Aggregations: Summarizing the Data"
#~ msgstr ""

#~ msgid ""
#~ "The string constraint has an option "
#~ "to add :ref:`a saved lexicon's "
#~ "<lexiconminer>` terms into the search "
#~ "(via button \"Add lexicon\")."
#~ msgstr ""

#~ msgid "Texta_tag constraint"
#~ msgstr ""

#~ msgid ""
#~ "Texta_tag constraint helps to find "
#~ "certain :ref:`tag <texta_fact>` or :ref:`tags"
#~ " <texta_fact>` with certain values. You "
#~ "can find several different values at "
#~ "once with the little '+'-sign which "
#~ "adds one more value-line. Look in"
#~ " the table above for the operators'"
#~ " meanings."
#~ msgstr ""

#~ msgid ""
#~ "*Texta_tag tag constraints*. Search for "
#~ "documents that have at least one "
#~ "ORG tag in it and definetly no "
#~ "PER tags."
#~ msgstr ""

#~ msgid ""
#~ "*Texta_tag tag value constraint with "
#~ "or*. Texta_tag tag constraint enables "
#~ "choosing multible tags at once. For "
#~ "example this constraint outputs all "
#~ "documents that has at least one of"
#~ " the tags (COMPANY, EML, ADDR) in "
#~ "it."
#~ msgstr ""

#~ msgid ""
#~ "*Texta_tag tag value constraint*. Search "
#~ "for documents that have an ORG tag"
#~ " with either value \"NATO\" or value"
#~ " \"European Union\" in it (or both)."
#~ msgstr ""

#~ msgid ""
#~ "*Search Options*. Only texta_tag constraints"
#~ " will be highlighted in the results"
#~ " with these selected Search Options."
#~ msgstr ""

#~ msgid ""
#~ "*Combination of constraints*. Search for "
#~ "documents published in 2014, contain LOC"
#~ " tags with values \"Russia\" and "
#~ "\"Ukraine\" and the word \"invasion\"."
#~ msgstr ""

#~ msgid ""
#~ "We can also aggregate over "
#~ ":ref:`texta_facts <texta_fact>` field in order"
#~ " to see the top entities under "
#~ "some tag. If we click on the "
#~ "black diagram button, we can scroll "
#~ "through the results. We see as "
#~ "many entities as we chose for our"
#~ " aggregation size."
#~ msgstr ""

#~ msgid ""
#~ "The Search application is responsible "
#~ "for both creating the searches defining"
#~ " subsets of documents for Toolkit's "
#~ "other applications and browsing-summarizing"
#~ " the data."
#~ msgstr ""

#~ msgid "In order to use **Search**, project must be selected in upper panel."
#~ msgstr ""

#~ msgid ""
#~ "Search's graphical interface consists of "
#~ "serveral important panels, which are "
#~ "depicted in :numref:`search_panel`. We can "
#~ "collapse or open the panels by "
#~ "clicking on the arrow in the "
#~ "corner."
#~ msgstr ""

#~ msgid "*Search Panel*"
#~ msgstr ""

#~ msgid ":ref:`Current Search <currentsearch>`"
#~ msgstr ""

#~ msgid ":ref:`Saved Searches <savedsearches>`"
#~ msgstr ""

#~ msgid ":ref:`Aggregations <aggregations>`"
#~ msgstr ""

#~ msgid ""
#~ "Data browsing and summarization depend "
#~ "on searches. Search consists of a "
#~ "set of constraints on :ref:`field "
#~ "<field_concept>` values. We can define "
#~ "our constraints on the data using "
#~ "the *Current Search* panel. Without "
#~ "saving the constraints, we are in "
#~ "a “test mode”, which means that we"
#~ " can use the search in real "
#~ "time, but we cannot use the search"
#~ " in other tools. After saving the "
#~ "search, it is available also to "
#~ "other tools."
#~ msgstr ""

#~ msgid ""
#~ "The search will be done on the "
#~ "Project's dataset(s) chosen in the upper"
#~ " panel."
#~ msgstr ""

#~ msgid "*Current search*"
#~ msgstr ""

#~ msgid "From left to right in the red box:"
#~ msgstr ""

#~ msgid ""
#~ "view query constructed with Current "
#~ "Search in a more suitable format "
#~ "for :ref:`Elasticsearch <elasticsearch>`,"
#~ msgstr ""

#~ msgid "save the constructed search,"
#~ msgstr ""

#~ msgid "collapse Current Search panel."
#~ msgstr ""

#~ msgid ""
#~ "Current Searh divides into Simple Search"
#~ " and Advanced Search (look below)."
#~ msgstr ""

#~ msgid ""
#~ "Current match doesn't differentiate lower "
#~ "and upper case (except regex "
#~ "constraint). This means that searching "
#~ "for \"President\" also matches \"president\"."
#~ " If the case is important in "
#~ "the search, use regex constraint (see"
#~ " below)."
#~ msgstr ""

#~ msgid ""
#~ "Simple search searches for a word "
#~ "on all fields in the chosen "
#~ "dataset. Words separated with space ('"
#~ " ') are considered as a space-"
#~ "separated list - each word must "
#~ "occur in at least one field in "
#~ "the document."
#~ msgstr ""

#~ msgid ""
#~ "*Simple search*. 'word1', 'word2', 'word3' "
#~ "are searched from all the fields "
#~ "in the document. Only those which "
#~ "have all of them matched at least"
#~ " once, are returned."
#~ msgstr ""

#~ msgid ""
#~ "Advanced search searches for a "
#~ "constraint in a certain field in "
#~ "the chosen dataset. Constraints can be"
#~ " added on different fields in one "
#~ "search. Constrainst can be removed via"
#~ " the 'X'-sign in upper right. The "
#~ "constraints can be divided into three:"
#~ " string constraint, date constraint and "
#~ "texta_tag constraint (look below). When "
#~ "the constraints are chosen the Search"
#~ " output can be seen via "
#~ "\"Search\"-button."
#~ msgstr ""

#~ msgid ""
#~ "One line equals one search item. "
#~ "This constraint has several operators. "
#~ "Look below for their functions."
#~ msgstr ""

#~ msgid "all of the items (lines) are matched in the document"
#~ msgstr ""

#~ msgid "at least one of the items (lines) is matched in the document"
#~ msgstr ""

#~ msgid "definetly none of the items are matched in the document"
#~ msgstr ""

#~ msgid "slop"
#~ msgstr ""

#~ msgid "defines how many words can be between the phrase words defined"
#~ msgstr ""

#~ msgid ""
#~ "*String constraint*. This string constraint"
#~ " is on field named \"text\". It "
#~ "looks for documents that have either "
#~ "phrase \"president Obama\" or \"president "
#~ "Trump\" in it (or both). Since the"
#~ " Slop is 2, it also matches the"
#~ " phrase if it has 0-2 words "
#~ "between the words (e.g \"president "
#~ "Barack Obama\"). The \"X\" in the "
#~ "red square is for deleting this "
#~ "constraint."
#~ msgstr ""

#~ msgid ""
#~ "The string constraint has an option "
#~ "to add :ref:`a saved lexicon's "
#~ "<lexiconminer>` terms into the search "
#~ "(via button \"Add lexicon\"). This works"
#~ " only when there is at least "
#~ "one lexicon in the project."
#~ msgstr ""

#~ msgid ""
#~ "Date constraint works only on a "
#~ "proper datefield. This outputs only "
#~ "those documents which datefield are "
#~ "within the chosen time range (starting"
#~ " day included and ending day "
#~ "excluded). The time range can be "
#~ "chosen by clicking on the little "
#~ "calendar in the right."
#~ msgstr ""

#~ msgid "Texta_fact constraint"
#~ msgstr ""

#~ msgid ""
#~ "Texta_fact constraint helps to find "
#~ "certain :ref:`fact <texta_fact>` or "
#~ ":ref:`facts <texta_fact>` with certain values."
#~ " You can find several different "
#~ "values at once with the little "
#~ "'+'-sign which adds one more value-"
#~ "line. Look in the table above for"
#~ " the operators' meanings."
#~ msgstr ""

#~ msgid ""
#~ "*Texta_fact fact constraints*. Search for "
#~ "documents that have at least one "
#~ "ORG fact in it and definetly no"
#~ " PER fact."
#~ msgstr ""

#~ msgid ""
#~ "*Texta_fact fact value constraint with "
#~ "or*. Texta_fact fact constraint enables "
#~ "choosing multible facts at once. For "
#~ "example this constraint outputs all "
#~ "documents that has at least one of"
#~ " the facts (COMPANY, EML, ADDR) in"
#~ " it."
#~ msgstr ""

#~ msgid ""
#~ "*Texta_fact fact value constraint*. Search "
#~ "for documents that have an ORG "
#~ "fact with either value \"NATO\" or "
#~ "value \"European Union\" in it (or "
#~ "both)."
#~ msgstr ""

#~ msgid ""
#~ "The same texta_fact constraints can be"
#~ " constructed automatically by clicking on"
#~ " the texta_fact labels or values in"
#~ " the dataset texta_facts field."
#~ msgstr ""

#~ msgid ""
#~ "*Search Options*. Only texta_fact constraints"
#~ " will be highlighted in the results"
#~ " with these selected Search Options."
#~ msgstr ""

#~ msgid "Examples"
#~ msgstr ""

#~ msgid ""
#~ "*Regex String Constraint*. Search for "
#~ "documents that have either \"payoff\" or"
#~ " \"bribe[a-z]{0,2}\" in it. Last of "
#~ "which means word 'bribe' with 0-2 "
#~ "extra letters (e.g \"bribe\", \"bribed\", "
#~ "\"bribery\")."
#~ msgstr ""

#~ msgid ""
#~ "If we click on “Search” button, we"
#~ " will see the matching documents in"
#~ " a tabular form (see "
#~ ":numref:`search_results`). The results might "
#~ "be updating while modifying the "
#~ "constraints."
#~ msgstr ""

#~ msgid "*Example Search Results*"
#~ msgstr ""

#~ msgid ""
#~ "If there are too many features "
#~ "(columns), we can hide or show "
#~ "them from the drop-down menu in"
#~ " the up left corner. We can "
#~ "select or deselect all of them "
#~ "together (*Select all*) or by clicking"
#~ " on them separately. We can also "
#~ "hide or get back the Searcher's "
#~ "panels with *Toggle drawer* button. We"
#~ " can browse through Searcher's results "
#~ "with the arrows in the upper "
#~ "right. We can also choose how many"
#~ " items per page would we want "
#~ "to see in the upper right."
#~ msgstr ""

#~ msgid ""
#~ "After having comed up with a "
#~ "suitable search, it can be saved "
#~ "for later use by clicking on the"
#~ " **disk** icon up-right in the "
#~ "Current Search panel. The **eye** icon"
#~ " next to the disk icon shows us"
#~ " the actual :ref:`Elasticsearch <elasticsearch>`"
#~ " query built by choosing the "
#~ "Operators and words to search for."
#~ msgstr ""

#~ msgid ""
#~ "After saving a search, it becomes "
#~ "available for using in Toolkit's "
#~ "applications. For example, they can be"
#~ " used in browsing the search later"
#~ " again or applying in aggregations. "
#~ "The saved search can be sent to"
#~ " other users who have the permission"
#~ " to the project with a copied "
#~ "url. This opens the saved search "
#~ "under the Current Search for the "
#~ "other user. Saved searches can be "
#~ "opened in the Current Search simply "
#~ "by clicking on it."
#~ msgstr ""

#~ msgid ""
#~ "As fun as browsing through the "
#~ "data is, it is not always enough."
#~ " Sometimes we want to get an "
#~ "overview of our data, such as "
#~ "topics over time or word distributions."
#~ " Searcher allows to do all of "
#~ "that and more through the “Aggregations”"
#~ " panel."
#~ msgstr ""

#~ msgid ""
#~ "Aggregations have two components - data"
#~ " and features it aggregates over. It"
#~ " will aggregate over the dataset we"
#~ " have under the Current Search. We"
#~ " can also exclude current search "
#~ "(meaning that 'Aggregate over all data"
#~ " except the one we have currently "
#~ "active') and choose the aggregation "
#~ "size. By defining a feature, we "
#~ "can group by that feature and get"
#~ " category counts. For example, lets "
#~ "assume we are interested in seeing "
#~ "how are the top words distributed "
#~ "in our sample data defined by our"
#~ " “bribe” search. For that we simply"
#~ " click on our bribe search under "
#~ "Saved Searches to get it as the"
#~ " current search."
#~ msgstr ""

#~ msgid ""
#~ "The numbers returned for scores are "
#~ "primarily intended for ranking different "
#~ "suggestions sensibly rather than something "
#~ "easily understood by end users. The "
#~ "scores are derived from the doc "
#~ "frequencies in foreground and background "
#~ "sets. In brief, a term is "
#~ "considered significant if there is a "
#~ "noticeable difference in the frequency "
#~ "in which a term appears in the "
#~ "subset and in the background. The "
#~ "way the terms are ranked can be"
#~ " configured, `see \"Parameters\" section "
#~ "<https://www.elastic.co/guide/en/elasticsearch/reference/current"
#~ "/search-aggregations-bucket-significanttext-"
#~ "aggregation.html>`_."
#~ msgstr ""

#~ msgid ""
#~ "One cool thing we can also do, "
#~ "is to visualize the frequency of "
#~ "texts with searched words in it on"
#~ " a timeline. We can do that if"
#~ " we have a proper date field "
#~ "(in Texta date format) in our "
#~ "data. Here we can visualize when "
#~ "were the words 'bribe', 'bribery' and"
#~ " 'bribed' used most frequently in our"
#~ " dataset."
#~ msgstr ""

#~ msgid ""
#~ "We can also aggregate over "
#~ ":ref:`texta_facts <texta_fact>` field in order"
#~ " to see the top entities under "
#~ "some fact. If we click on the "
#~ "black diagram button, we can scroll "
#~ "through the results. We see as "
#~ "many entities as we chose for our"
#~ " aggregation size."
#~ msgstr ""

